Index: app/src/main/java/space/korolev/quiz/LogicNumber4Lines.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/LogicNumber4Lines.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/LogicNumber4Lines.java	(date 1623062244279)
@@ -7,16 +7,16 @@
 
 public class LogicNumber4Lines {
     public Random random = new Random();
-    String strResult,strLine, strMiddleLine;
-  public   String[] arrLine = {"",""};
-    String[] arrText = {"","","","",""};
-    String[] arrResult = {"","","",""};
+    String strResult, strLine, strMiddleLine;
+    public String[] arrLine = {"", ""};
+    String[] arrText = {"", "", "", "", ""};
+    String[] arrResult = {"", "", "", ""};
     int firstX, secondX, thirdX, result, operation, resultmidlle;
-    char[]  mathOp = {'*','/','+','-'};
+    char[] mathOp = {'*', '/', '+', '-'};
 
 
     public LogicNumber4Lines(TextView question, TextView var1, TextView var2, TextView var3, TextView var4, int n) {
-        mathExpression (n);
+        mathExpression(n);
         arrFunc(n);
         var1.setText(arrText[0]);
         var2.setText(arrText[1]);
@@ -27,125 +27,125 @@
     }
 
 
-    public String[]  mathExpression (int num)
-    {
-        firstX = random.nextInt(20)-10;
-        secondX = random.nextInt(20)-10;
-        thirdX = random.nextInt(7)-3;
+    public String[] mathExpression(int num) {
+        firstX = random.nextInt(20) - 10;
+        secondX = random.nextInt(20) - 10;
+        thirdX = random.nextInt(7) - 3;
 
         //initialize random math operation
         char op1 = mathOper();
         char op2 = mathOper();
 
         //choose difficult
-        if (num == 1)
-        {
-           // Log.d("NumOper", "Num is: " +num);
+        if (num == 1) {
+            // Log.d("NumOper", "Num is: " +num);
             try {
                 switch (op1) {
                     case '+':
                         result = firstX + secondX;
                         strResult = Integer.toString(result);
-                    break;
+                        break;
                     case '-':
                         result = firstX - secondX;
                         strResult = Integer.toString(result);
-                    break;
+                        break;
                     case '*':
                         result = firstX * secondX;
                         strResult = Integer.toString(result);
-                    break;
+                        break;
                     case '/':
                         if (secondX != 0) {
                             result = firstX / secondX;
                             strResult = Integer.toString(result);
                         } else strResult = "Error";
-                    break;
+                        break;
                 }
 
                 //creating of final string
                 arrLine[0] = strResult;
-                if (secondX<0 )strLine=Integer.toString(firstX)+" "+op1+" " + "("+Integer.toString(secondX)+ ")" + " =";
-                else strLine=Integer.toString(firstX)+" "+op1+" "+Integer.toString(secondX) + " =";
+                if (secondX < 0)
+                    strLine = Integer.toString(firstX) + " " + op1 + " " + "(" + Integer.toString(secondX) + ")" + " =";
+                else
+                    strLine = Integer.toString(firstX) + " " + op1 + " " + Integer.toString(secondX) + " =";
                 arrLine[1] = strLine;
                 //end
 
             } catch (NumberFormatException nfe) {
                 Log.d("NumOper", "Cant be");
             }
-        }
-        else Log.d("NumOper", "Erreeeerwerwor");
+        } else Log.d("NumOper", "Erreeeerwerwor");
 
-        if (num==2)
-    {
-        // Log.d("NumOper", "Num is: " +num);
-        try {
-            switch (op1) {
-                case '+':
-                    resultmidlle = firstX + secondX;
-                    break;
-                case '-':
-                    resultmidlle = firstX - secondX;
-                    break;
-                case '*':
-                    resultmidlle = firstX * secondX;
-                    break;
-                case '/':
-                    while (secondX==0) secondX = random.nextInt(20)-10;
-                    if (secondX != 0) {
-                        resultmidlle = firstX / secondX;
-                    }
-                    break;
-            }
+        if (num == 2) {
+            // Log.d("NumOper", "Num is: " +num);
+            try {
+                switch (op1) {
+                    case '+':
+                        resultmidlle = firstX + secondX;
+                        break;
+                    case '-':
+                        resultmidlle = firstX - secondX;
+                        break;
+                    case '*':
+                        resultmidlle = firstX * secondX;
+                        break;
+                    case '/':
+                        while (secondX == 0) secondX = random.nextInt(20) - 10;
+                        if (secondX != 0) {
+                            resultmidlle = firstX / secondX;
+                        }
+                        break;
+                }
 
-            // creating of middle string result
-            if (secondX<0 )strMiddleLine=Integer.toString(firstX)+" "+op1+" " + "("+Integer.toString(secondX)+ ")";
-            else strMiddleLine=Integer.toString(firstX)+" "+op1+" "+Integer.toString(secondX);
-            //end
+                // creating of middle string result
+                if (secondX < 0)
+                    strMiddleLine = Integer.toString(firstX) + " " + op1 + " " + "(" + Integer.toString(secondX) + ")";
+                else
+                    strMiddleLine = Integer.toString(firstX) + " " + op1 + " " + Integer.toString(secondX);
+                //end
 
-            switch (op2) {
-                case '+':
-                    result = resultmidlle + thirdX;
-                    strResult = Integer.toString(result);
-                    break;
-                case '-':
-                    result = resultmidlle - thirdX;
-                    strResult = Integer.toString(result);
-                    break;
-                case '*':
-                    result = resultmidlle * thirdX;
-                    strResult = Integer.toString(result);
-                    break;
-                case '/':
+                switch (op2) {
+                    case '+':
+                        result = resultmidlle + thirdX;
+                        strResult = Integer.toString(result);
+                        break;
+                    case '-':
+                        result = resultmidlle - thirdX;
+                        strResult = Integer.toString(result);
+                        break;
+                    case '*':
+                        result = resultmidlle * thirdX;
+                        strResult = Integer.toString(result);
+                        break;
+                    case '/':
 
-                    if (thirdX != 0) {
-                        result = resultmidlle / thirdX;
-                        strResult = Integer.toString(result);
-                    } else strResult = "Error";
-                    break;
-            }
+                        if (thirdX != 0) {
+                            result = resultmidlle / thirdX;
+                            strResult = Integer.toString(result);
+                        } else strResult = "Error";
+                        break;
+                }
 
-            //creating of final string
-            arrLine[0] = strResult;
-            if (thirdX<0 )strLine= "(" + strMiddleLine + ")" +" "+op2+" " + "("+Integer.toString(thirdX)+ ")" + " =";
-            else strLine= "(" + strMiddleLine + ")" + " "+op2+" "+Integer.toString(thirdX) + " =";
-            arrLine[1] = strLine;
-            //end
+                //creating of final string
+                arrLine[0] = strResult;
+                if (thirdX < 0)
+                    strLine = "(" + strMiddleLine + ")" + " " + op2 + " " + "(" + Integer.toString(thirdX) + ")" + " =";
+                else
+                    strLine = "(" + strMiddleLine + ")" + " " + op2 + " " + Integer.toString(thirdX) + " =";
+                arrLine[1] = strLine;
+                //end
 
-        } catch (NumberFormatException nfe) {
-            Log.d("NumOper", "Cant be");
-        }
-    }
-    else Log.d("NumOper", "Erreeeerwerwor");
+            } catch (NumberFormatException nfe) {
+                Log.d("NumOper", "Cant be");
+            }
+        } else Log.d("NumOper", "Erreeeerwerwor");
 
-    return arrLine;
+        return arrLine;
     }
 
     //making variants of answering (string)
-    String[] arrFunc(int num)
-    {
+    String[] arrFunc(int num) {
         arrResult[0] = arrLine[0];
-        if (num==1) { // 9*9 = 81, 81*2+1=163
+        if (num == 1) { // 9*9 = 81, 81*2+1=163
             arrResult[1] = Integer.toString(random.nextInt(163) - 81);
             while (arrResult[1] == arrResult[0])
                 arrResult[1] = Integer.toString(random.nextInt(163) - 81);
@@ -159,7 +159,7 @@
                 arrResult[3] = Integer.toString(random.nextInt(163) - 81);
         }
 
-        if (num==2) { // 9*9*3 = 243, 243*2+1=487
+        if (num == 2) { // 9*9*3 = 243, 243*2+1=487
             arrResult[1] = Integer.toString(random.nextInt(487) - 243);
             while (arrResult[1] == arrResult[0])
                 arrResult[1] = Integer.toString(random.nextInt(487) - 243);
@@ -179,15 +179,16 @@
         arrText[i] = arrResult[0];
 
         i = random.nextInt(4);
-        while (arrText[i] == arrResult[0])i = random.nextInt(4);
+        while (arrText[i] == arrResult[0]) i = random.nextInt(4);
         arrText[i] = arrResult[1];
 
         i = random.nextInt(4);
-        while (arrText[i] == arrResult[0] || arrText[i] == arrResult[1])i = random.nextInt(4);
+        while (arrText[i] == arrResult[0] || arrText[i] == arrResult[1]) i = random.nextInt(4);
         arrText[i] = arrResult[2];
 
         i = random.nextInt(4);
-        while (arrText[i] == arrResult[0] || arrText[i] == arrResult[1]|| arrText[i] == arrResult[2])i = random.nextInt(4);
+        while (arrText[i] == arrResult[0] || arrText[i] == arrResult[1] || arrText[i] == arrResult[2])
+            i = random.nextInt(4);
         arrText[i] = arrResult[3];
 
         arrText[4] = arrLine[1];
@@ -195,10 +196,7 @@
     }
 
 
-
-
-    public char mathOper()
-    {
+    public char mathOper() {
         operation = random.nextInt(4);
         return mathOp[operation];
     }
Index: app/src/main/java/space/korolev/quiz/LogicCoutry4Lines.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/LogicCoutry4Lines.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/LogicCoutry4Lines.java	(date 1623062244321)
@@ -7,46 +7,46 @@
 
 public class LogicCoutry4Lines {
     public Random random = new Random();
-  public   String strResult;
+    public String strResult;
     int randNum;
-   public String[] arrResult = {"","","","",""};
-   public String[] arrText = {"","","","","",""};
+    public String[] arrResult = {"", "", "", "", ""};
+    public String[] arrText = {"", "", "", "", "", ""};
     String[] arrCountry;
 
     public LogicCoutry4Lines(TextView question, TextView var1, TextView var2, TextView var3, TextView var4, String[] countryArr) {
-        arrCountry=countryArr;
+        arrCountry = countryArr;
         randomCountry();
         var1.setText(arrText[0]);
         var2.setText(arrText[1]);
         var3.setText(arrText[2]);
         var4.setText(arrText[3]);
         question.setText(arrText[4]);
-        strResult=arrText[5];
+        strResult = arrText[5];
     }
 
-    public String[]  randomCountry ()
-    {
-        randNum=random.nextInt(arrCountry.length)+2;
-        while (randNum%2==1 )randNum=random.nextInt(arrCountry.length)+2;
-        randNum=randNum-2;
-        arrResult[4]=arrCountry[randNum];   //country
-        arrResult[0]=arrCountry[randNum+1]; //captain city
+    public String[] randomCountry() {
+        randNum = random.nextInt(arrCountry.length) + 2;
+        while (randNum % 2 == 1) randNum = random.nextInt(arrCountry.length) + 2;
+        randNum = randNum - 2;
+        arrResult[4] = arrCountry[randNum];   //country
+        arrResult[0] = arrCountry[randNum + 1]; //captain city
 
-        randNum=random.nextInt(arrCountry.length)+2;
-        while (randNum%2==0 || arrResult[0]==arrCountry[randNum-2] )randNum=random.nextInt(arrCountry.length)+2;
-        arrResult[1]=arrCountry[randNum-2]; //captain city var1
+        randNum = random.nextInt(arrCountry.length) + 2;
+        while (randNum % 2 == 0 || arrResult[0] == arrCountry[randNum - 2])
+            randNum = random.nextInt(arrCountry.length) + 2;
+        arrResult[1] = arrCountry[randNum - 2]; //captain city var1
         Log.d("ResArr", "var1 " + randNum);
 
-        randNum=random.nextInt(arrCountry.length)+2;
-        while (randNum%2==0 || arrResult[0]==arrCountry[randNum-2] || arrResult[1]==arrCountry[randNum-2])
-            randNum=random.nextInt(arrCountry.length)+2;
-        arrResult[2]=arrCountry[randNum-2]; //captain city var2
+        randNum = random.nextInt(arrCountry.length) + 2;
+        while (randNum % 2 == 0 || arrResult[0] == arrCountry[randNum - 2] || arrResult[1] == arrCountry[randNum - 2])
+            randNum = random.nextInt(arrCountry.length) + 2;
+        arrResult[2] = arrCountry[randNum - 2]; //captain city var2
         Log.d("ResArr", "var2 " + randNum);
 
-        randNum=random.nextInt(arrCountry.length)+2;
-        while (randNum%2==0 || arrResult[0]==arrCountry[randNum-2] || arrResult[1]==arrCountry[randNum-2] || arrResult[2]==arrCountry[randNum-2])
-            randNum=random.nextInt(arrCountry.length)+2;
-        arrResult[3]=arrCountry[randNum-2]; //captain city var3
+        randNum = random.nextInt(arrCountry.length) + 2;
+        while (randNum % 2 == 0 || arrResult[0] == arrCountry[randNum - 2] || arrResult[1] == arrCountry[randNum - 2] || arrResult[2] == arrCountry[randNum - 2])
+            randNum = random.nextInt(arrCountry.length) + 2;
+        arrResult[3] = arrCountry[randNum - 2]; //captain city var3
         Log.d("ResArr", "var3 " + randNum);
         Log.d("ResArr", "________-------_________ ");
 
@@ -55,14 +55,15 @@
         arrText[i] = arrResult[0];
         arrText[5] = arrResult[0];
         i = random.nextInt(4);
-        while (arrText[i] == arrResult[0])i = random.nextInt(4);
+        while (arrText[i] == arrResult[0]) i = random.nextInt(4);
         arrText[i] = arrResult[1];
         i = random.nextInt(4);
-        while (arrText[i] == arrResult[0] || arrText[i] == arrResult[1])i = random.nextInt(4);
+        while (arrText[i] == arrResult[0] || arrText[i] == arrResult[1]) i = random.nextInt(4);
         arrText[i] = arrResult[2];
 
         i = random.nextInt(4);
-        while (arrText[i] == arrResult[0] || arrText[i] == arrResult[1]|| arrText[i] == arrResult[2])i = random.nextInt(4);
+        while (arrText[i] == arrResult[0] || arrText[i] == arrResult[1] || arrText[i] == arrResult[2])
+            i = random.nextInt(4);
         arrText[i] = arrResult[3];
 
         arrText[4] = arrResult[4];//question
Index: app/src/main/java/space/korolev/quiz/Activities/Level3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/Level3.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/Activities/Level3.java	(date 1623062244275)
@@ -59,8 +59,8 @@
     private Toast backToast;
 
     public final long millisInFuture = 3000;
-    public  final long countDownInterval = 500;
-    public final int progressScale = (int)millisInFuture/100;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
 
     //initialize View container
     ProgressBar pb_timeLeft;
@@ -68,7 +68,7 @@
     ImageView img_right;
     TextView tv_levels;
     TextView tv;
-    public  TextView tvdend;
+    public TextView tvdend;
     public TextView tv_levelTime;
 
     //_________________________
@@ -79,9 +79,9 @@
         setContentView(R.layout.universal);
 // add array of progress start\
         final int[] progress = {
-                R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-                R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-                R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
+                R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+                R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+                R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
         // add array of progress end
 
 
@@ -98,7 +98,7 @@
 
         pb_timeLeft = findViewById(R.id.pb_TimeLeft);
         //timer settings
-        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
         //______________________________
 
 
@@ -112,10 +112,9 @@
         // округление углов на картинках - конец
 
 
-
         //развернуть игру на весь экран - начало
         Window w = getWindow();
-        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
         //развернуть игру на весь экран - конец
 
 
@@ -129,17 +128,16 @@
         dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose = (TextView)dialog.findViewById(R.id.btnclose);
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
         btnclose.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level3.this,GameLevels.class);
+                    Intent intent = new Intent(Level3.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
                 dialog.dismiss();//close dialog wnd
             }
@@ -154,8 +152,8 @@
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 //LEVEL TIMER INITIALIZE
-                startLevel=true;
-                levelTimer= new LevelTimer(tv_levelTime,getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo),startLevel);
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
                 levelTimer.runTimer();
                 //__________________________________________
                 dialog.dismiss();//close dialog wnd
@@ -180,17 +178,16 @@
         dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose2 = (TextView)dialogEnd.findViewById(R.id.btnclose);
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
         btnclose2.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level3.this,GameLevels.class);
+                    Intent intent = new Intent(Level3.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
 
                 }
                 dialogEnd.dismiss();//close dialog wnd
@@ -209,8 +206,7 @@
                     Intent intent = new Intent(Level3.this, Level3.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e) {
+                } catch (Exception e) {
 
                 }
 
@@ -222,33 +218,28 @@
         //___________________________________
 
 
-
         // bnt back start
-        Button btn_back = (Button)findViewById(R.id.btn_lvl_back);
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
         btn_back.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 try {
-                    Intent intent = new Intent(Level3.this,GameLevels.class);
+                    Intent intent = new Intent(Level3.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
             }
         });
         //btn back end
 
 
-
-
         numLeft = random.nextInt(20);//любое число 0..9
         img_left.setImageResource(array.images3[numLeft]);//set image
 
         numRight = random.nextInt(20);//любое число 0..9
         //Цикл, проверяющий равенство чисел
-        while (array.power3[numLeft] == array.power3[numRight])
-        {
+        while (array.power3[numLeft] == array.power3[numRight]) {
             numRight = random.nextInt(20);
         }
         img_right.setImageResource(array.images3[numRight]);
@@ -259,81 +250,71 @@
             @Override
             public boolean onTouch(View v, MotionEvent event) {
                 //условие касания картинки - начало
-                if (event.getAction() == MotionEvent.ACTION_DOWN)
-                {
+                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                     img_right.setEnabled(false);
-                    if(array.power3[numLeft] > array.power3[numRight])img_left.setImageResource(R.drawable.img_true);
+                    if (array.power3[numLeft] > array.power3[numRight])
+                        img_left.setImageResource(R.drawable.img_true);
                     else img_left.setImageResource(R.drawable.img_false);
 
                     if (timerStarted == true) {
                         roundTimer.cancel();
-                        timerCancel=true;
-                        timerStarted=false;
-                        timerCancel=false;
+                        timerCancel = true;
+                        timerStarted = false;
+                        timerCancel = false;
                     }
-                }
-                else if (event.getAction() == MotionEvent.ACTION_UP)
-                {
+                } else if (event.getAction() == MotionEvent.ACTION_UP) {
 
                     // SET TIMER
-                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
 
                     roundTimer.start();
-                    timerStarted=true;
+                    timerStarted = true;
 
                     //__________________________________________________
 
-                    if(array.power3[numLeft] > array.power3[numRight])
-                    {
-                        if(count<20) count=count+1;
+                    if (array.power3[numLeft] > array.power3[numRight]) {
+                        if (count < 20) count = count + 1;
                         //закрашиваем прогресс серым цветом
-                        for (int i=0; i<20; i++) {
+                        for (int i = 0; i < 20; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
 
-                    }
-                    else
-                    {
-                        if (count > 0)
-                        {
+                    } else {
+                        if (count > 0) {
                             if (count == 1) count = 0;
                             else count = count - 2;
                         }
 
-                        for (int i=0; i<=19; i++) {
+                        for (int i = 0; i <= 19; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
                     }
-                    if (count == 20)
-                    {
+                    if (count == 20) {
                         tvdend.setText(levelTimer.runTimer());
-                        dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                        startLevel=false;
+                        dbEditor = new DataBaseEditor(1, 1, "Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                        startLevel = false;
                         levelTimer.resetSeconds();
                         dialogEnd.show();
-                    }
-                    else
-                    {
+                    } else {
                         numLeft = random.nextInt(20);//любое число 0..9
                         img_left.setImageResource(array.images3[numLeft]);//set image
                         img_left.startAnimation(a);
 
                         numRight = random.nextInt(20);//любое число 0..9
                         //Цикл, проверяющий равенство чисел
-                        while (array.power3[numLeft] == array.power3[numRight])
-                        {
+                        while (array.power3[numLeft] == array.power3[numRight]) {
                             numRight = random.nextInt(20);
                         }
                         img_right.setImageResource(array.images3[numRight]);
@@ -352,80 +333,70 @@
             @Override
             public boolean onTouch(View v, MotionEvent event) {
                 //условие касания картинки - начало
-                if (event.getAction() == MotionEvent.ACTION_DOWN)
-                {
+                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                     img_left.setEnabled(false);
-                    if(array.power3[numLeft] < array.power3[numRight])img_right.setImageResource(R.drawable.img_true);
+                    if (array.power3[numLeft] < array.power3[numRight])
+                        img_right.setImageResource(R.drawable.img_true);
                     else img_right.setImageResource(R.drawable.img_false);
 
                     if (timerStarted == true) {
                         roundTimer.cancel();
-                        timerCancel=true;
-                        timerStarted=false;
-                        timerCancel=false;
+                        timerCancel = true;
+                        timerStarted = false;
+                        timerCancel = false;
                     }
-                }
-                else if (event.getAction() == MotionEvent.ACTION_UP)
-                {
+                } else if (event.getAction() == MotionEvent.ACTION_UP) {
                     // TIMER Start
-                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
                     roundTimer.start();
-                    timerStarted=true;
+                    timerStarted = true;
 
                     //__________________
 
 
-                    if(array.power3[numLeft] < array.power3[numRight])
-                    {
-                        if(count<20) count=count+1;
+                    if (array.power3[numLeft] < array.power3[numRight]) {
+                        if (count < 20) count = count + 1;
                         //закрашиваем прогресс серым цветом
-                        for (int i=0; i<20; i++) {
+                        for (int i = 0; i < 20; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
 
-                    }
-                    else
-                    {
-                        if (count > 0)
-                        {
+                    } else {
+                        if (count > 0) {
                             if (count == 1) count = 0;
                             else count = count - 2;
                         }
 
-                        for (int i=0; i<=19; i++) {
+                        for (int i = 0; i <= 19; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
                     }
-                    if (count == 20)
-                    {
+                    if (count == 20) {
                         tvdend.setText(levelTimer.runTimer());
-                        dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                        startLevel=false;
+                        dbEditor = new DataBaseEditor(1, 1, "Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                        startLevel = false;
                         levelTimer.resetSeconds();
                         dialogEnd.show();
-                    }
-                    else
-                    {
+                    } else {
                         numLeft = random.nextInt(20);//любое число 0..9
                         img_left.setImageResource(array.images3[numLeft]);//set image
                         img_left.startAnimation(a);
 
                         numRight = random.nextInt(20);//любое число 0..9
                         //Цикл, проверяющий равенство чисел
-                        while (array.power3[numLeft] == array.power3[numRight])
-                        {
+                        while (array.power3[numLeft] == array.power3[numRight]) {
                             numRight = random.nextInt(20);
                         }
                         img_right.setImageResource(array.images3[numRight]);
@@ -447,9 +418,9 @@
         final ProgressBar pb;
 
         final int[] progress = {
-                R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-                R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-                R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
+                R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+                R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+                R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
         final Animation a = AnimationUtils.loadAnimation(Level3.this, R.anim.alpha);
 
         /**
@@ -469,7 +440,7 @@
 
         @Override
         public void onTick(long millisUntilFinished) {
-            timerFinish=false;
+            timerFinish = false;
             pb.setProgress((int) millisUntilFinished / progressScale);
             if (millisUntilFinished < 2000) {
                 pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
@@ -480,7 +451,7 @@
         @Override
         public void onFinish() {
 
-            count=count-2;
+            count = count - 2;
             for (int i = 0; i <= 19; i++) {
                 tv = findViewById(progress[i]);
                 tv.setBackgroundResource(R.drawable.style_points);
@@ -505,9 +476,9 @@
             img_right.setImageResource(array.images3[numRight]);
             img_right.startAnimation(a);
 
-            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
             roundTimer.start();
-            timerStarted=true;
+            timerStarted = true;
 
         }
 
@@ -515,28 +486,21 @@
     }
 
 
-
     //system btn BACK Start
     @Override
-    public void onBackPressed()
-    {
+    public void onBackPressed() {
 
-        if (backPressedTime + 2000 > System.currentTimeMillis())
-        {
-            try
-            {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
                 backToast.cancel();
-                Intent intent = new Intent(Level3.this,GameLevels.class);
-                startActivity(intent);finish();
-            }
-            catch (Exception e)
-            {
+                Intent intent = new Intent(Level3.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
 
             }
-        }
-        else
-        {
-            backToast = Toast.makeText(getBaseContext(),"Нажмите ещё раз, чтобы выйти из уровня",Toast.LENGTH_LONG);
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
             backToast.show();
         }
         backPressedTime = System.currentTimeMillis();
Index: app/src/main/java/space/korolev/quiz/Activities/Level2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/Level2.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/Activities/Level2.java	(date 1623062244296)
@@ -48,8 +48,8 @@
 
     public RoundTimer roundTimer;
 
-   public boolean startLevel;
-   public LevelTimer levelTimer;
+    public boolean startLevel;
+    public LevelTimer levelTimer;
 
     public int numLeft;
     public int numRight;
@@ -61,8 +61,8 @@
     private Toast backToast;
 
     public final long millisInFuture = 3000;
-    public  final long countDownInterval = 300;
-    public final int progressScale = (int)millisInFuture/100;
+    public final long countDownInterval = 300;
+    public final int progressScale = (int) millisInFuture / 100;
 
     //initialize View container
     ProgressBar pb_timeLeft;
@@ -70,7 +70,7 @@
     ImageView img_right;
     TextView tv_levels;
     TextView tv;
-    public  TextView tvdend;
+    public TextView tvdend;
     public TextView tv_levelTime;
 
     //_________________________
@@ -81,9 +81,9 @@
         setContentView(R.layout.universal);
 // add array of progress start\
         final int[] progress = {
-                R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-                R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-                R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
+                R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+                R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+                R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
         // add array of progress end
 
 
@@ -101,7 +101,7 @@
 
         pb_timeLeft = findViewById(R.id.pb_TimeLeft);
         //timer settings
-        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
         //______________________________
 
 
@@ -115,10 +115,9 @@
         // округление углов на картинках - конец
 
 
-
         //развернуть игру на весь экран - начало
         Window w = getWindow();
-        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
         //развернуть игру на весь экран - конец
 
 
@@ -134,17 +133,16 @@
         dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose = (TextView)dialog.findViewById(R.id.btnclose);
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
         btnclose.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level2.this,GameLevels.class);
+                    Intent intent = new Intent(Level2.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
                 dialog.dismiss();//close dialog wnd
             }
@@ -160,8 +158,8 @@
                 //обработка нажатия кнопки - начало
 
                 //LEVEL TIMER INITIALIZE
-                startLevel=true;
-                levelTimer= new LevelTimer(tv_levelTime,getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo),startLevel);
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
                 levelTimer.runTimer();
                 //__________________________________________
 
@@ -183,25 +181,22 @@
         tvdend.setText("ERROR");
 
 
-
-
         dialogEnd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
         dialogEnd.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
                 WindowManager.LayoutParams.MATCH_PARENT);
         dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose2 = (TextView)dialogEnd.findViewById(R.id.btnclose);
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
         btnclose2.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level2.this,GameLevels.class);
+                    Intent intent = new Intent(Level2.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
 
                 }
                 dialogEnd.dismiss();//close dialog wnd
@@ -217,11 +212,10 @@
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level2.this,Level3.class);
+                    Intent intent = new Intent(Level2.this, Level3.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e) {
+                } catch (Exception e) {
 
                 }
 
@@ -233,34 +227,29 @@
         //___________________________________
 
 
-
         // bnt back start
-        Button btn_back = (Button)findViewById(R.id.btn_lvl_back);
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
         btn_back.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 try {
-                    Intent intent = new Intent(Level2.this,GameLevels.class);
+                    Intent intent = new Intent(Level2.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
             }
         });
         //btn back end
 
 
-
-
         numLeft = random.nextInt(10);//любое число 0..9
         img_left.setImageResource(array.images2[numLeft]);//set image
 
 
         numRight = random.nextInt(10);//любое число 0..9
         //Цикл, проверяющий равенство чисел
-        while (numLeft == numRight)
-        {
+        while (numLeft == numRight) {
             numRight = random.nextInt(10);
         }
 
@@ -272,75 +261,64 @@
             @Override
             public boolean onTouch(View v, MotionEvent event) {
                 //условие касания картинки - начало
-                if (event.getAction() == MotionEvent.ACTION_DOWN)
-                {
+                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                     img_right.setEnabled(false);
-                    if(numLeft>numRight)img_left.setImageResource(R.drawable.img_true);
+                    if (numLeft > numRight) img_left.setImageResource(R.drawable.img_true);
                     else img_left.setImageResource(R.drawable.img_false);
 
                     if (timerStarted == true) {
                         roundTimer.cancel();
-                        timerCancel=true;
-                        timerStarted=false;
-                        timerCancel=false;
+                        timerCancel = true;
+                        timerStarted = false;
+                        timerCancel = false;
                     }
-                }
-                else if (event.getAction() == MotionEvent.ACTION_UP)
-                {
+                } else if (event.getAction() == MotionEvent.ACTION_UP) {
 
                     // SET TIMER
-                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
                     roundTimer.start();
-                    timerStarted=true;
+                    timerStarted = true;
 
                     //__________________________________________________
 
-                    if(numLeft>numRight)
-                    {
-                        if(count<20) count=count+1;
+                    if (numLeft > numRight) {
+                        if (count < 20) count = count + 1;
                         //закрашиваем прогресс серым цветом
-                        for (int i=0; i<20; i++) {
+                        for (int i = 0; i < 20; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
 
-                    }
-                    else
-                    {
-                        if (count > 0)
-                        {
+                    } else {
+                        if (count > 0) {
                             if (count == 1) count = 0;
                             else count = count - 2;
                         }
 
-                        for (int i=0; i<=19; i++) {
+                        for (int i = 0; i <= 19; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
                     }
-                    if (count == 20)
-                    {
-                        if (count == 20)
-                        {
+                    if (count == 20) {
+                        if (count == 20) {
                             tvdend.setText(levelTimer.runTimer());
-                            dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                            startLevel=false;
+                            dbEditor = new DataBaseEditor(1, 1, "Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                            startLevel = false;
                             levelTimer.resetSeconds();
                             dialogEnd.show();
                         }
-                    }
-                    else
-                    {
+                    } else {
                         numLeft = random.nextInt(10);//любое число 0..9
                         img_left.setImageResource(array.images2[numLeft]);//set image
                         img_left.startAnimation(a);
@@ -348,8 +326,7 @@
 
                         numRight = random.nextInt(10);//любое число 0..9
                         //Цикл, проверяющий равенство чисел
-                        while (numLeft == numRight)
-                        {
+                        while (numLeft == numRight) {
                             numRight = random.nextInt(10);
                         }
 
@@ -369,72 +346,62 @@
             @Override
             public boolean onTouch(View v, MotionEvent event) {
                 //условие касания картинки - начало
-                if (event.getAction() == MotionEvent.ACTION_DOWN)
-                {
+                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                     img_left.setEnabled(false);
-                    if(numLeft<numRight)img_right.setImageResource(R.drawable.img_true);
+                    if (numLeft < numRight) img_right.setImageResource(R.drawable.img_true);
                     else img_right.setImageResource(R.drawable.img_false);
 
                     if (timerStarted == true) {
                         roundTimer.cancel();
-                        timerCancel=true;
-                        timerStarted=false;
-                        timerCancel=false;
+                        timerCancel = true;
+                        timerStarted = false;
+                        timerCancel = false;
                     }
-                }
-                else if (event.getAction() == MotionEvent.ACTION_UP)
-                {
+                } else if (event.getAction() == MotionEvent.ACTION_UP) {
                     // TIMER Start
-                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
                     roundTimer.start();
-                    timerStarted=true;
+                    timerStarted = true;
 
                     //__________________
 
 
-                    if(numRight>numLeft)
-                    {
-                        if(count<20) count=count+1;
+                    if (numRight > numLeft) {
+                        if (count < 20) count = count + 1;
                         //закрашиваем прогресс серым цветом
-                        for (int i=0; i<20; i++) {
+                        for (int i = 0; i < 20; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
 
-                    }
-                    else
-                    {
-                        if (count > 0)
-                        {
+                    } else {
+                        if (count > 0) {
                             if (count == 1) count = 0;
                             else count = count - 2;
                         }
 
-                        for (int i=0; i<=19; i++) {
+                        for (int i = 0; i <= 19; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
                     }
-                    if (count == 20)
-                    {
+                    if (count == 20) {
                         tvdend.setText(levelTimer.runTimer());
-                        dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                        startLevel=false;
+                        dbEditor = new DataBaseEditor(1, 1, "Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                        startLevel = false;
                         levelTimer.resetSeconds();
                         dialogEnd.show();
-                    }
-                    else
-                    {
+                    } else {
                         numLeft = random.nextInt(10);//любое число 0..9
                         img_left.setImageResource(array.images2[numLeft]);//set image
                         img_left.startAnimation(a);
@@ -442,8 +409,7 @@
 
                         numRight = random.nextInt(10);//любое число 0..9
                         //Цикл, проверяющий равенство чисел
-                        while (numLeft == numRight)
-                        {
+                        while (numLeft == numRight) {
                             numRight = random.nextInt(10);
                         }
 
@@ -466,9 +432,9 @@
         final ProgressBar pb;
 
         final int[] progress = {
-                R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-                R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-                R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
+                R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+                R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+                R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
         final Animation a = AnimationUtils.loadAnimation(Level2.this, R.anim.alpha);
 
         /**
@@ -488,7 +454,7 @@
 
         @Override
         public void onTick(long millisUntilFinished) {
-            timerFinish=false;
+            timerFinish = false;
             pb.setProgress((int) millisUntilFinished / progressScale);
             if (millisUntilFinished < 2000) {
                 pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
@@ -499,7 +465,7 @@
         @Override
         public void onFinish() {
 
-            count=count-2;
+            count = count - 2;
             for (int i = 0; i <= 19; i++) {
                 tv = findViewById(progress[i]);
                 tv.setBackgroundResource(R.drawable.style_points);
@@ -524,9 +490,9 @@
             img_right.setImageResource(array.images2[numRight]);
             img_right.startAnimation(a);
 
-            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
             roundTimer.start();
-            timerStarted=true;
+            timerStarted = true;
 
         }
 
@@ -534,28 +500,21 @@
     }
 
 
-
     //system btn BACK Start
     @Override
-    public void onBackPressed()
-    {
+    public void onBackPressed() {
 
-        if (backPressedTime + 2000 > System.currentTimeMillis())
-        {
-            try
-            {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
                 backToast.cancel();
-                Intent intent = new Intent(Level2.this,GameLevels.class);
-                startActivity(intent);finish();
-            }
-            catch (Exception e)
-            {
+                Intent intent = new Intent(Level2.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
 
             }
-        }
-        else
-        {
-            backToast = Toast.makeText(getBaseContext(),"Нажмите ещё раз, чтобы выйти из уровня",Toast.LENGTH_LONG);
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
             backToast.show();
         }
         backPressedTime = System.currentTimeMillis();
Index: app/src/main/java/space/korolev/quiz/Activities/Level1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/Level1.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/Activities/Level1.java	(date 1623062244269)
@@ -34,7 +34,7 @@
 public class Level1 extends AppCompatActivity {
 
     Dialog dialog;
-  public   Dialog dialogEnd;
+    public Dialog dialogEnd;
     public Client client;
     public AppDataBase mydb;
     public DataBaseEditor dbEditor;
@@ -62,38 +62,37 @@
 
     public final long millisInFuture = 3000;
     public final long countDownInterval = 300;
-    public final int progressScale = (int)millisInFuture/100;
+    public final int progressScale = (int) millisInFuture / 100;
 
     //initialize View container
-     ProgressBar pb_timeLeft;
-     ImageView img_left;
-     ImageView img_right;
+    ProgressBar pb_timeLeft;
+    ImageView img_left;
+    ImageView img_right;
     public TextView tv_levelTime;
-     TextView tv;
-   public  TextView tvdend;
-     TextView tx_levels;
+    TextView tv;
+    public TextView tvdend;
+    TextView tx_levels;
 
     //_________________________
 
 
-
     @Override
-        protected void onCreate(Bundle savedInstanceState) {
+    protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.universal);
-          //Устанавливаем текст tx_level
+        //Устанавливаем текст tx_level
         Context context = Level1.this;
 
         // add array of progress start\
-         final int[] progress = {
-                R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-                R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-                R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
+        final int[] progress = {
+                R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+                R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+                R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
         // add array of progress end
 
 
         //add animation start
-         final Animation a = AnimationUtils.loadAnimation(Level1.this, R.anim.alpha);
+        final Animation a = AnimationUtils.loadAnimation(Level1.this, R.anim.alpha);
         //add animation end
 
         tv_levelTime = findViewById(R.id.tv_roundtime);
@@ -103,7 +102,7 @@
 
         pb_timeLeft = findViewById(R.id.pb_TimeLeft);
         //timer settings
-       roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
 
 
         //______________________________
@@ -119,7 +118,7 @@
 
         //развернуть игру на весь экран - начало
         Window w = getWindow();
-        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
         //развернуть игру на весь экран - конец
 
 
@@ -131,21 +130,20 @@
         dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose = (TextView)dialog.findViewById(R.id.btnclose);
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
         btnclose.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level1.this,GameLevels.class);
+                    Intent intent = new Intent(Level1.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
                 dialog.dismiss();//close dialog wnd
             }
-                //обработка нажатия кнопки - конец
+            //обработка нажатия кнопки - конец
         });
         //кнопка, которая закрывает диалог окно - конец
 
@@ -156,8 +154,8 @@
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 //LEVEL TIMER INITIALIZE
-                startLevel=true;
-                levelTimer= new LevelTimer(tv_levelTime,getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendone),startLevel);
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendone), startLevel);
                 levelTimer.runTimer();
                 //__________________________________________
 
@@ -183,17 +181,16 @@
         dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose2 = (TextView)dialogEnd.findViewById(R.id.btnclose);
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
         btnclose2.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level1.this,GameLevels.class);
+                    Intent intent = new Intent(Level1.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
 
                 }
                 dialogEnd.dismiss();//close dialog wnd
@@ -209,11 +206,10 @@
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level1.this,Level2.class);
+                    Intent intent = new Intent(Level1.this, Level2.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e) {
+                } catch (Exception e) {
 
                 }
 
@@ -225,34 +221,29 @@
         //___________________________________
 
 
-
         // bnt back start
-        Button btn_back = (Button)findViewById(R.id.btn_lvl_back);
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
         btn_back.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 try {
-                    Intent intent = new Intent(Level1.this,GameLevels.class);
+                    Intent intent = new Intent(Level1.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
             }
         });
         //btn back end
 
 
-
-
         numLeft = random.nextInt(10);//любое число 0..9
         img_left.setImageResource(array.images1[numLeft]);//set image
 
 
         numRight = random.nextInt(10);//любое число 0..9
         //Цикл, проверяющий равенство чисел
-        while (numLeft == numRight)
-        {
+        while (numLeft == numRight) {
             numRight = random.nextInt(10);
         }
 
@@ -264,73 +255,63 @@
             @Override
             public boolean onTouch(View v, MotionEvent event) {
                 //условие касания картинки - начало
-                if (event.getAction() == MotionEvent.ACTION_DOWN)
-                {
+                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                     img_right.setEnabled(false);
-                    if(numLeft>numRight)img_left.setImageResource(R.drawable.img_true);
+                    if (numLeft > numRight) img_left.setImageResource(R.drawable.img_true);
                     else img_left.setImageResource(R.drawable.img_false);
 
                     if (timerStarted == true) {
                         roundTimer.cancel();
-                        timerCancel=true;
-                        timerStarted=false;
-                        timerCancel=false;
+                        timerCancel = true;
+                        timerStarted = false;
+                        timerCancel = false;
                     }
-                }
-                else if (event.getAction() == MotionEvent.ACTION_UP)
-                {
+                } else if (event.getAction() == MotionEvent.ACTION_UP) {
 
                     // SET TIMER
-                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
 
                     roundTimer.start();
-                    timerStarted=true;
+                    timerStarted = true;
 
-                //__________________________________________________
+                    //__________________________________________________
 
-                if(numLeft>numRight)
-                    {
-                        if(count<20) count=count+1;
-                            //закрашиваем прогресс серым цветом
-                        for (int i=0; i<20; i++) {
+                    if (numLeft > numRight) {
+                        if (count < 20) count = count + 1;
+                        //закрашиваем прогресс серым цветом
+                        for (int i = 0; i < 20; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
 
-                    }
-                    else
-                        {
-                            if (count > 0)
-                            {
-                                if (count == 1) count = 0;
-                                else count = count - 2;
-                            }
+                    } else {
+                        if (count > 0) {
+                            if (count == 1) count = 0;
+                            else count = count - 2;
+                        }
 
-                            for (int i=0; i<=19; i++) {
-                                tv = findViewById(progress[i]);
-                                tv.setBackgroundResource(R.drawable.style_points);
-                            }
-                            //закрашиваем правильные ответы зеленым
-                            for (int i=0; i<count; i++) {
-                                tv = findViewById(progress[i]);
-                                tv.setBackgroundResource(R.drawable.style_points_green);
-                            }
-                        }
-                    if (count == 20)
-                        {
-                            tvdend.setText(levelTimer.runTimer());
-                            dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                            startLevel=false;
-                            levelTimer.resetSeconds();
-                            dialogEnd.show();
-                    }
-                    else
-                    {
+                        for (int i = 0; i <= 19; i++) {
+                            tv = findViewById(progress[i]);
+                            tv.setBackgroundResource(R.drawable.style_points);
+                        }
+                        //закрашиваем правильные ответы зеленым
+                        for (int i = 0; i < count; i++) {
+                            tv = findViewById(progress[i]);
+                            tv.setBackgroundResource(R.drawable.style_points_green);
+                        }
+                    }
+                    if (count == 20) {
+                        tvdend.setText(levelTimer.runTimer());
+                        dbEditor = new DataBaseEditor(1, 1, "Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                        startLevel = false;
+                        levelTimer.resetSeconds();
+                        dialogEnd.show();
+                    } else {
                         numLeft = random.nextInt(10);//любое число 0..9
                         img_left.setImageResource(array.images1[numLeft]);//set image
                         img_left.startAnimation(a);
@@ -338,8 +319,7 @@
 
                         numRight = random.nextInt(10);//любое число 0..9
                         //Цикл, проверяющий равенство чисел
-                        while (numLeft == numRight)
-                        {
+                        while (numLeft == numRight) {
                             numRight = random.nextInt(10);
                         }
 
@@ -359,73 +339,63 @@
             @Override
             public boolean onTouch(View v, MotionEvent event) {
                 //условие касания картинки - начало
-                if (event.getAction() == MotionEvent.ACTION_DOWN)
-                {
+                if (event.getAction() == MotionEvent.ACTION_DOWN) {
                     img_left.setEnabled(false);
-                    if(numLeft<numRight)img_right.setImageResource(R.drawable.img_true);
+                    if (numLeft < numRight) img_right.setImageResource(R.drawable.img_true);
                     else img_right.setImageResource(R.drawable.img_false);
 
                     if (timerStarted == true) {
                         roundTimer.cancel();
-                        timerCancel=true;
-                        timerStarted=false;
-                        timerCancel=false;
+                        timerCancel = true;
+                        timerStarted = false;
+                        timerCancel = false;
                     }
-                }
-                else if (event.getAction() == MotionEvent.ACTION_UP)
-                {
+                } else if (event.getAction() == MotionEvent.ACTION_UP) {
                     // TIMER Start
-                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+                    roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
                     roundTimer.start();
-                    timerStarted=true;
+                    timerStarted = true;
 
                     //__________________
 
 
-                    if(numRight>numLeft)
-                    {
-                        if(count<20) count=count+1;
+                    if (numRight > numLeft) {
+                        if (count < 20) count = count + 1;
                         //закрашиваем прогресс серым цветом
-                        for (int i=0; i<20; i++) {
+                        for (int i = 0; i < 20; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
 
-                    }
-                    else
-                    {
-                        if (count > 0)
-                        {
+                    } else {
+                        if (count > 0) {
                             if (count == 1) count = 0;
                             else count = count - 2;
                         }
 
-                        for (int i=0; i<=19; i++) {
+                        for (int i = 0; i <= 19; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points);
                         }
                         //закрашиваем правильные ответы зеленым
-                        for (int i=0; i<count; i++) {
+                        for (int i = 0; i < count; i++) {
                             tv = findViewById(progress[i]);
                             tv.setBackgroundResource(R.drawable.style_points_green);
                         }
                     }
-                    if (count == 20)
-                    {
+                    if (count == 20) {
                         tvdend.setText(levelTimer.runTimer());
-                    //    init();
-                        dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                        startLevel=false;
+                        //    init();
+                        dbEditor = new DataBaseEditor(1, 1, "Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                        startLevel = false;
                         levelTimer.resetSeconds();
                         dialogEnd.show();
-                    }
-                    else
-                    {
+                    } else {
                         numLeft = random.nextInt(10);//любое число 0..9
                         img_left.setImageResource(array.images1[numLeft]);//set image
                         img_left.startAnimation(a);
@@ -433,8 +403,7 @@
 
                         numRight = random.nextInt(10);//любое число 0..9
                         //Цикл, проверяющий равенство чисел
-                        while (numLeft == numRight)
-                        {
+                        while (numLeft == numRight) {
                             numRight = random.nextInt(10);
                         }
 
@@ -457,9 +426,9 @@
         final ProgressBar pb;
 
         final int[] progress = {
-                R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-                R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-                R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
+                R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+                R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+                R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
         final Animation a = AnimationUtils.loadAnimation(Level1.this, R.anim.alpha);
 
         /**
@@ -479,7 +448,7 @@
 
         @Override
         public void onTick(long millisUntilFinished) {
-            timerFinish=false;
+            timerFinish = false;
             pb.setProgress((int) millisUntilFinished / progressScale);
             if (millisUntilFinished < 2000) {
                 pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
@@ -490,7 +459,7 @@
         @Override
         public void onFinish() {
 
-            count=count-2;
+            count = count - 2;
             for (int i = 0; i <= 19; i++) {
                 tv = findViewById(progress[i]);
                 tv.setBackgroundResource(R.drawable.style_points);
@@ -515,9 +484,9 @@
             img_right.setImageResource(array.images1[numRight]);
             img_right.startAnimation(a);
 
-            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
             roundTimer.start();
-            timerStarted=true;
+            timerStarted = true;
 
         }
 
@@ -525,28 +494,21 @@
     }
 
 
-
     //system btn BACK Start
     @Override
-    public void onBackPressed()
-    {
+    public void onBackPressed() {
 
-        if (backPressedTime + 2000 > System.currentTimeMillis())
-        {
-            try
-            {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
                 backToast.cancel();
-                Intent intent = new Intent(Level1.this,GameLevels.class);
-                startActivity(intent);finish();
-            }
-            catch (Exception e)
-            {
+                Intent intent = new Intent(Level1.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
 
             }
-        }
-        else
-        {
-            backToast = Toast.makeText(getBaseContext(),"Нажмите ещё раз, чтобы выйти из уровня",Toast.LENGTH_LONG);
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
             backToast.show();
         }
         backPressedTime = System.currentTimeMillis();
Index: app/src/main/java/space/korolev/quiz/Activities/GeoLvl1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/GeoLvl1.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/Activities/GeoLvl1.java	(date 1623062244285)
@@ -26,384 +26,413 @@
 import space.korolev.quiz.R;
 
 
-
 public class GeoLvl1 extends AppCompatActivity {
 
-        Dialog dialog;
-        Dialog dialogEnd;
+    Dialog dialog;
+    Dialog dialogEnd;
 
-        public boolean timerStarted;
-        public boolean timerFinish;
-        public boolean timerCancel;
-        private Toast backToast;
+    public boolean timerStarted;
+    public boolean timerFinish;
+    public boolean timerCancel;
+    private Toast backToast;
 
-        public DataBaseEditor dbEditor;
+    public DataBaseEditor dbEditor;
 
-        public RoundTimer roundTimer;
+    public RoundTimer roundTimer;
+    public SetBackColor setBackColor;
 
-        public boolean startLevel;
-        public LevelTimer levelTimer;
+    public boolean startLevel;
+    public LevelTimer levelTimer;
 
-        public int count = 0;// счетчик правильных ответов
-        private long backPressedTime;
+    public int count = 0;// счетчик правильных ответов
+    private long backPressedTime;
 
-        public String resultText;
+    public String resultText;
 
-        //settings of timer
-        public final long millisInFuture = 6000;
-        public  final long countDownInterval = 500;
-        public final int progressScale = (int)millisInFuture/100;
+    //settings of timer
+    public final long millisInFuture = 6000;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
 
-        //initialize View container
-        ProgressBar pb_timeLeft;
-        TextView tv_levels;
-        TextView tv;
-        public  TextView tvdend;
-        public TextView tv_levelTime;
+    //initialize View container
+    ProgressBar pb_timeLeft;
+    TextView tv_levels;
+    TextView tv;
+    public TextView tvdend;
+    public TextView tv_levelTime;
 
-        public TextView quest, var1,var2,var3,var4;
+    public TextView quest, var1, var2, var3, var4;
 
-        public LogicCoutry4Lines logCountry;
-        // add array of progress start\
-        public int[] progress = {
-                R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-                R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-                R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
-        // add array of progress end
+    public LogicCoutry4Lines logCountry;
+    // add array of progress start\
+    public int[] progress = {
+            R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+            R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+            R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
+    // add array of progress end
 
-        public String[] countries;
-
+    public String[] countries;
+    public TextView[] vars;
 
 
-        @Override
-        protected void onCreate(Bundle savedInstanceState) {
-            super.onCreate(savedInstanceState);
-            setContentView(R.layout.universal4line);
-            quest = findViewById(R.id.text_setquest);
-            var1 = findViewById(R.id.text_set1);
-            var2 = findViewById(R.id.text_set2);
-            var3 = findViewById(R.id.text_set3);
-            var4 = findViewById(R.id.text_set4);
-            countries = getResources().getStringArray(R.array.europeCountries);
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.universal4line);
+        quest = findViewById(R.id.text_setquest);
+        var1 = findViewById(R.id.text_set1);
+        var2 = findViewById(R.id.text_set2);
+        var3 = findViewById(R.id.text_set3);
+        var4 = findViewById(R.id.text_set4);
+        countries = getResources().getStringArray(R.array.europeCountries);
 
-            Context context = this;
+        Context context = this;
 
-            //initialize logic
-            logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4,countries);
-            Log.d("Text","Country"+quest.getText());
-            resultText=logCountry.strResult;
-            Log.d("Text","City"+resultText);
-            // add array of progress start\
+        //initialize logic
+        logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+        Log.d("Text", "Country" + quest.getText());
+        resultText = logCountry.strResult;
+        Log.d("Text", "City" + resultText);
+        // add array of progress start\
 
+        vars = new TextView[]{var1, var2, var3, var4};
 
-            tv_levelTime = findViewById(R.id.tv_roundtime);
-            tv_levels = findViewById(R.id.tx_levels);
-            tv_levels.setText(R.string.level4);
+        tv_levelTime = findViewById(R.id.tv_roundtime);
+        tv_levels = findViewById(R.id.tx_levels);
+        tv_levels.setText(R.string.level4);
 
-            pb_timeLeft = findViewById(R.id.pb_TimeLeft);
-            //timer settings
-            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
-            //______________________________
+        pb_timeLeft = findViewById(R.id.pb_TimeLeft);
+        //timer settings
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+        //______________________________
 
-            //развернуть игру на весь экран - начало
-            Window w = getWindow();
-            w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
-            //развернуть игру на весь экран - конец
+        //развернуть игру на весь экран - начало
+        Window w = getWindow();
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        //развернуть игру на весь экран - конец
 
-            //вызов диалогового окна в начале игры - начало
-            dialog = new Dialog(this);
-            dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
-            dialog.setContentView(R.layout.previewdialog);
-            ImageView imgd = dialog.findViewById(R.id.previewimg1);
-            imgd.setImageResource(R.drawable.previewlevel3img);
-            dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
-            dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
+        //вызов диалогового окна в начале игры - начало
+        dialog = new Dialog(this);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialog.setContentView(R.layout.previewdialog);
+        ImageView imgd = dialog.findViewById(R.id.previewimg1);
+        imgd.setImageResource(R.drawable.previewlevel3img);
+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
 
-            //кнопка, которая закрывает диалог окно - начало
-            TextView btnclose = (TextView)dialog.findViewById(R.id.btnclose);
-            btnclose.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    //обработка нажатия кнопки - начало
-                    try {
-                        Intent intent = new Intent(GeoLvl1.this,GameLevels.class);
-                        startActivity(intent);
-                        finish();
-                    }
-                    catch (Exception e){
-                    }
-                    dialog.dismiss();//close dialog wnd
-                }
-                //обработка нажатия кнопки - конец
-            });
-            //кнопка, которая закрывает диалог окно - конец
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
+        btnclose.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl1.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+                dialog.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
 
-            //кнопка, которая переходит к уровню - начало
-            Button btncont = (Button) dialog.findViewById(R.id.btncontinue);
-            btncont.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    //обработка нажатия кнопки - начало
-                    //LEVEL TIMER INITIALIZE
-                    startLevel=true;
-                    levelTimer= new LevelTimer(tv_levelTime,getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo),startLevel);
-                    levelTimer.runTimer();
-                    //__________________________________________
-                    dialog.dismiss();//close dialog wnd
+        //кнопка, которая переходит к уровню - начало
+        Button btncont = (Button) dialog.findViewById(R.id.btncontinue);
+        btncont.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                //LEVEL TIMER INITIALIZE
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
+                levelTimer.runTimer();
+                //__________________________________________
+                dialog.dismiss();//close dialog wnd
 
 
-                }
-                //обработка нажатия кнопки - конец
-            });
-            //кнопка, которая переходит к уровню - конец
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
 
-            dialog.show();
+        dialog.show();
 
-            //вызов диалогового окна в конце игры - начало
-            dialogEnd = new Dialog(this);
-            dialogEnd.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
-            dialogEnd.setContentView(R.layout.dialogend);
-            tvdend = dialogEnd.findViewById(R.id.textdescrend1);
-            tvdend.setText("ERROR");
-            dialogEnd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
-            dialogEnd.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
-                    WindowManager.LayoutParams.MATCH_PARENT);
-            dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
+        //вызов диалогового окна в конце игры - начало
+        dialogEnd = new Dialog(this);
+        dialogEnd.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialogEnd.setContentView(R.layout.dialogend);
+        tvdend = dialogEnd.findViewById(R.id.textdescrend1);
+        tvdend.setText("ERROR");
+        dialogEnd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialogEnd.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
+                WindowManager.LayoutParams.MATCH_PARENT);
+        dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
 
-            //кнопка, которая закрывает диалог окно - начало
-            TextView btnclose2 = (TextView)dialogEnd.findViewById(R.id.btnclose);
-            btnclose2.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    //обработка нажатия кнопки - начало
-                    try {
-                        Intent intent = new Intent(GeoLvl1.this,GameLevels.class);
-                        startActivity(intent);
-                        finish();
-                    }
-                    catch (Exception e){
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
+        btnclose2.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl1.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
 
-                    }
-                    dialogEnd.dismiss();//close dialog wnd
-                }
-                //обработка нажатия кнопки - конец
-            });
-            //кнопка, которая закрывает диалог окно - конец
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
 
-            //кнопка, которая переходит к уровню - начало
-            Button btncontEnd = (Button) dialogEnd.findViewById(R.id.btncontinue);
-            btncontEnd.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    //обработка нажатия кнопки - начало
-                    try {
-                        Intent intent = new Intent(GeoLvl1.this, Level3.class);
-                        startActivity(intent);
-                        finish();
-                    }
-                    catch (Exception e) {
+        //кнопка, которая переходит к уровню - начало
+        Button btncontEnd = (Button) dialogEnd.findViewById(R.id.btncontinue);
+        btncontEnd.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl1.this, GeoLvl2.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
 
-                    }
-                    dialogEnd.dismiss();//close dialog wnd
-                }
-                //обработка нажатия кнопки - конец
-            });
-            //кнопка, которая переходит к уровню - конец
-            //___________________________________
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+        //___________________________________
 
 
-
-            // bnt back start
-            Button btn_back = (Button)findViewById(R.id.btn_lvl_back);
-            btn_back.setOnClickListener(new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                    try {
-                        Intent intent = new Intent(GeoLvl1.this,GameLevels.class);
-                        startActivity(intent);
-                        finish();
-                    }
-                    catch (Exception e){
-                    }
-                }
-            });
+        // bnt back start
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
+        btn_back.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+                    Intent intent = new Intent(GeoLvl1.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+            }
+        });
 
 
-            //закрашиваем прогресс серым цветом
-            for (int i=0; i<20; i++) {
-                tv = findViewById(progress[i]);
-                tv.setBackgroundResource(R.drawable.style_points);
-            }
+        //закрашиваем прогресс серым цветом
+        for (int i = 0; i < 20; i++) {
+            tv = findViewById(progress[i]);
+            tv.setBackgroundResource(R.drawable.style_points);
+        }
 
 
-            View.OnClickListener onClickListener = new View.OnClickListener() {
-                @Override
-                public void onClick(View v) {
-                   // Log.d("COUNTR","Num  "+count);
-                    Log.d("Text",""+resultText);
-                    switch (v.getId()) {
-                        case R.id.text_set1:
-                            if (var1.getText() == resultText) {
-          //                      var1.setTextColor(getColor(R.color.green80));
-                                count = count + 1;
-                            }
-                            else {
-     //                           var1.setTextColor(getColor(R.color.red80));
-                                if (count > 2) count = count - 2;
-                                else count = 0;
-                            }
-                            break;
-                        case R.id.text_set2:
-                            if (var2.getText() == resultText) {
-                   //             var2.setBackground(getDrawable(R.drawable.btn_stroke_white_press_green)); //(R.drawable.btn_stroke_white_press_green);
-                                count = count + 1;
-                            }
-                            else {
-                                if (count > 2) count = count - 2;
-                                else count = 0;
-                            }
-                            break;
-                        case R.id.text_set3:
+        View.OnClickListener onClickListener = new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                // Log.d("COUNTR","Num  "+count);
+                Log.d("Text", "" + resultText);
+                switch (v.getId()) {
+                    case R.id.text_set1:
+                        if (var1.getText() == resultText) {
+                            //                      var1.setTextColor(getColor(R.color.green80));
+                            count = count + 1;
+                        } else {
+                            //                           var1.setTextColor(getColor(R.color.red80));
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set2:
+                        if (var2.getText() == resultText) {
+                            //             var2.setBackground(getDrawable(R.drawable.btn_stroke_white_press_green)); //(R.drawable.btn_stroke_white_press_green);
+                            count = count + 1;
+                        } else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set3:
 
-                            if (var3.getText() == resultText) count=count+1;
-                            else {
-                                if (count > 2) count = count - 2;
-                                else count = 0;
-                            }
-                            break;
-                        case R.id.text_set4:
+                        if (var3.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set4:
 
-                            if (var4.getText() == resultText) count=count+1;
-                            else {
-                                if (count > 2) count = count - 2;
-                                else count = 0;
-                            }
-                            break;
-                    }
-                    roundTimer.cancel();
-                    roundTimer.start();
-                    //закрашиваем прогресс серым цветом
-                    for (int i=0; i<20; i++) {
-                        tv = findViewById(progress[i]);
-                        tv.setBackgroundResource(R.drawable.style_points);
-                    }
-                    //закрашиваем правильные ответы зеленым
-                    for (int i=0; i<count; i++) {
-                        tv = findViewById(progress[i]);
-                        tv.setBackgroundResource(R.drawable.style_points_green);
-                    }
+                        if (var4.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                }
+                roundTimer.cancel();
+
+                //закрашиваем прогресс серым цветом
+                for (int i = 0; i < 20; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points);
+                }
+                //закрашиваем правильные ответы зеленым
+                for (int i = 0; i < count; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points_green);
+                }
 
 
-                    if (count == 20)
-                    {
-                        tvdend.setText(levelTimer.runTimer());
-                        //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                        startLevel=false;
-                        levelTimer.resetSeconds();
-                        dialogEnd.show();
-                    }
-                    else {
-                        logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
-                        resultText=logCountry.strResult;
-                    }
+                if (count == 20) {
+                    tvdend.setText(levelTimer.runTimer());
+                    //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                    startLevel = false;
+                    levelTimer.resetSeconds();
+                    dialogEnd.show();
+                } else {
+                    setBackColor = new SetBackColor(1000, 100, this);
+                    setBackColor.start();
+                    var1.setOnClickListener(null);
+                    var2.setOnClickListener(null);
+                    var3.setOnClickListener(null);
+                    var4.setOnClickListener(null);
+                }
 
                 //    Log.d("COUNTER","Text:"+resultText);
-             //       var1.setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+                //       var1.setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
 
-                }
+            }
 
-            };
+        };
 
-            var1.setOnClickListener(onClickListener);
-            var2.setOnClickListener(onClickListener);
-            var3.setOnClickListener(onClickListener);
-            var4.setOnClickListener(onClickListener);
+        var1.setOnClickListener(onClickListener);
+        var2.setOnClickListener(onClickListener);
+        var3.setOnClickListener(onClickListener);
+        var4.setOnClickListener(onClickListener);
 
-        }
+    }
 
 
+    class SetBackColor extends CountDownTimer {
+        public View.OnClickListener onCLick;
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         */
 
+        public SetBackColor(long millisInFuture, long countDownInterval, View.OnClickListener v) {
+            super(millisInFuture, countDownInterval);
+            onCLick = v;
+        }
 
+        @Override
+        public void onTick(long millisUntilFinished) {
+            for (int i = 0; i < 4; i++) {
+                if (vars[i].getText() == resultText)
+                    vars[i].setBackground(getDrawable(R.drawable.style_btn_white_green_press));
+                else vars[i].setBackground(getDrawable(R.drawable.style_btn_white_red_press));
+            }
+
+            timerFinish = false;
+        }
+
+        @Override
+        public void onFinish() {
+            for (int i = 0; i < 4; i++) {
+                vars[i].setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+            }
+            var1.setOnClickListener(onCLick);
+            var2.setOnClickListener(onCLick);
+            var3.setOnClickListener(onCLick);
+            var4.setOnClickListener(onCLick);
+            logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            resultText = logCountry.strResult;
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
 
 
-       class RoundTimer extends CountDownTimer {
-            final ProgressBar pb;
+    class RoundTimer extends CountDownTimer {
+        final ProgressBar pb;
 
 
-            /**
-             * @param millisInFuture    The number of millis in the future from the call
-             *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
-             *                          is called.
-             * @param countDownInterval The interval along the way to receive
-             *                          {@link #onTick(long)} callbacks.
-             * @param pb
-             */
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         * @param pb
+         */
 
-            public RoundTimer(long millisInFuture, long countDownInterval, ProgressBar pb, boolean cancelTimer) {
-                super(millisInFuture, countDownInterval);
-                this.pb = pb;
-                if (cancelTimer) cancel();
-            }
+        public RoundTimer(long millisInFuture, long countDownInterval, ProgressBar pb, boolean cancelTimer) {
+            super(millisInFuture, countDownInterval);
+            this.pb = pb;
+            if (cancelTimer) cancel();
+        }
 
-            @Override
-            public void onTick(long millisUntilFinished) {
-                timerFinish=false;
-                pb.setProgress((int) millisUntilFinished / progressScale);
-                if (millisUntilFinished < 2000) {
-                    pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
-                } else
-                    pb.setProgressTintList(ColorStateList.valueOf(Color.GREEN));
-            }
+        @Override
+        public void onTick(long millisUntilFinished) {
+            timerFinish = false;
+            pb.setProgress((int) millisUntilFinished / progressScale);
+            if (millisUntilFinished < 2000) {
+                pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
+            } else
+                pb.setProgressTintList(ColorStateList.valueOf(Color.GREEN));
+        }
 
-            @Override
-            public void onFinish() {
+        @Override
+        public void onFinish() {
 
-                count=count-2;
-                for (int i = 0; i <= 19; i++) {
-                    tv = findViewById(progress[i]);
-                    tv.setBackgroundResource(R.drawable.style_points);
-                }
-                //закрашиваем правильные ответы зеленым
-                for (int i = 0; i < count; i++) {
-                    tv = findViewById(progress[i]);
-                    tv.setBackgroundResource(R.drawable.style_points_green);
-                }
-              //  logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
-                //resultText=logCountry.strResult;
-                roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
-                roundTimer.start();
-                timerStarted=true;
-            }
-        }
+            count = count - 2;
+            for (int i = 0; i <= 19; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points);
+            }
+            //закрашиваем правильные ответы зеленым
+            for (int i = 0; i < count; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points_green);
+            }
+            //  logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            //resultText=logCountry.strResult;
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
 
 
-
-        //system btn BACK Start
-        @Override
-        public void onBackPressed()
-        {
-            if (backPressedTime + 2000 > System.currentTimeMillis())
-            {
-                try
-                {
-                    backToast.cancel();
-                    Intent intent = new Intent(GeoLvl1.this,GameLevels.class);
-                    startActivity(intent);finish();
-                }
-                catch (Exception e)
-                {
+    //system btn BACK Start
+    @Override
+    public void onBackPressed() {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
+                backToast.cancel();
+                Intent intent = new Intent(GeoLvl1.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
 
-                }
             }
-            else
-            {
-                backToast = Toast.makeText(getBaseContext(),"Нажмите ещё раз, чтобы выйти из уровня",Toast.LENGTH_LONG);
-                backToast.show();
-            }
-            backPressedTime = System.currentTimeMillis();
-        }
-        //system btn BACK End
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
+            backToast.show();
+        }
+        backPressedTime = System.currentTimeMillis();
+    }
+    //system btn BACK End
 
-    }
+}
 
 
Index: app/src/main/java/space/korolev/quiz/Activities/GeoLvl3.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/GeoLvl3.java	(date 1623062244300)
+++ app/src/main/java/space/korolev/quiz/Activities/GeoLvl3.java	(date 1623062244300)
@@ -0,0 +1,438 @@
+package space.korolev.quiz.Activities;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.ColorStateList;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Bundle;
+import android.os.CountDownTimer;
+import android.util.Log;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import space.korolev.quiz.DataBaseEditor;
+import space.korolev.quiz.LevelTimer;
+import space.korolev.quiz.LogicCoutry4Lines;
+import space.korolev.quiz.R;
+
+
+public class GeoLvl3 extends AppCompatActivity {
+
+    Dialog dialog;
+    Dialog dialogEnd;
+
+    public boolean timerStarted;
+    public boolean timerFinish;
+    public boolean timerCancel;
+    private Toast backToast;
+
+    public DataBaseEditor dbEditor;
+
+    public RoundTimer roundTimer;
+    public SetBackColor setBackColor;
+
+    public boolean startLevel;
+    public LevelTimer levelTimer;
+
+    public int count = 0;// счетчик правильных ответов
+    private long backPressedTime;
+
+    public String resultText;
+
+    //settings of timer
+    public final long millisInFuture = 6000;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
+
+    //initialize View container
+    ProgressBar pb_timeLeft;
+    TextView tv_levels;
+    TextView tv;
+    public TextView tvdend;
+    public TextView tv_levelTime;
+
+    public TextView quest, var1, var2, var3, var4;
+
+    public LogicCoutry4Lines logCountry;
+    // add array of progress start\
+    public int[] progress = {
+            R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+            R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+            R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
+    // add array of progress end
+
+    public String[] countries;
+    public TextView[] vars;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.universal4line);
+        quest = findViewById(R.id.text_setquest);
+        var1 = findViewById(R.id.text_set1);
+        var2 = findViewById(R.id.text_set2);
+        var3 = findViewById(R.id.text_set3);
+        var4 = findViewById(R.id.text_set4);
+        countries = getResources().getStringArray(R.array.africaCountries);
+
+        Context context = this;
+
+        //initialize logic
+        logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+        Log.d("Text", "Country" + quest.getText());
+        resultText = logCountry.strResult;
+        Log.d("Text", "City" + resultText);
+        // add array of progress start\
+
+        vars = new TextView[]{var1, var2, var3, var4};
+
+        tv_levelTime = findViewById(R.id.tv_roundtime);
+        tv_levels = findViewById(R.id.tx_levels);
+        tv_levels.setText(R.string.level4);
+
+        pb_timeLeft = findViewById(R.id.pb_TimeLeft);
+        //timer settings
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+        //______________________________
+
+        //развернуть игру на весь экран - начало
+        Window w = getWindow();
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        //развернуть игру на весь экран - конец
+
+        //вызов диалогового окна в начале игры - начало
+        dialog = new Dialog(this);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialog.setContentView(R.layout.previewdialog);
+        ImageView imgd = dialog.findViewById(R.id.previewimg1);
+        imgd.setImageResource(R.drawable.previewlevel3img);
+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
+        btnclose.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl3.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+                dialog.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncont = (Button) dialog.findViewById(R.id.btncontinue);
+        btncont.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                //LEVEL TIMER INITIALIZE
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
+                levelTimer.runTimer();
+                //__________________________________________
+                dialog.dismiss();//close dialog wnd
+
+
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+
+        dialog.show();
+
+        //вызов диалогового окна в конце игры - начало
+        dialogEnd = new Dialog(this);
+        dialogEnd.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialogEnd.setContentView(R.layout.dialogend);
+        tvdend = dialogEnd.findViewById(R.id.textdescrend1);
+        tvdend.setText("ERROR");
+        dialogEnd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialogEnd.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
+                WindowManager.LayoutParams.MATCH_PARENT);
+        dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
+        btnclose2.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl3.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncontEnd = (Button) dialogEnd.findViewById(R.id.btncontinue);
+        btncontEnd.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl3.this, GeoLvl4.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+        //___________________________________
+
+
+        // bnt back start
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
+        btn_back.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+                    Intent intent = new Intent(GeoLvl3.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+            }
+        });
+
+
+        //закрашиваем прогресс серым цветом
+        for (int i = 0; i < 20; i++) {
+            tv = findViewById(progress[i]);
+            tv.setBackgroundResource(R.drawable.style_points);
+        }
+
+
+        View.OnClickListener onClickListener = new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                // Log.d("COUNTR","Num  "+count);
+                Log.d("Text", "" + resultText);
+                switch (v.getId()) {
+                    case R.id.text_set1:
+                        if (var1.getText() == resultText) {
+                            //                      var1.setTextColor(getColor(R.color.green80));
+                            count = count + 1;
+                        } else {
+                            //                           var1.setTextColor(getColor(R.color.red80));
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set2:
+                        if (var2.getText() == resultText) {
+                            //             var2.setBackground(getDrawable(R.drawable.btn_stroke_white_press_green)); //(R.drawable.btn_stroke_white_press_green);
+                            count = count + 1;
+                        } else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set3:
+
+                        if (var3.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set4:
+
+                        if (var4.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                }
+                roundTimer.cancel();
+
+                //закрашиваем прогресс серым цветом
+                for (int i = 0; i < 20; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points);
+                }
+                //закрашиваем правильные ответы зеленым
+                for (int i = 0; i < count; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points_green);
+                }
+
+
+                if (count == 20) {
+                    tvdend.setText(levelTimer.runTimer());
+                    //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                    startLevel = false;
+                    levelTimer.resetSeconds();
+                    dialogEnd.show();
+                } else {
+                    setBackColor = new SetBackColor(1000, 100, this);
+                    setBackColor.start();
+                    var1.setOnClickListener(null);
+                    var2.setOnClickListener(null);
+                    var3.setOnClickListener(null);
+                    var4.setOnClickListener(null);
+                }
+
+                //    Log.d("COUNTER","Text:"+resultText);
+                //       var1.setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+
+            }
+
+        };
+
+        var1.setOnClickListener(onClickListener);
+        var2.setOnClickListener(onClickListener);
+        var3.setOnClickListener(onClickListener);
+        var4.setOnClickListener(onClickListener);
+
+    }
+
+
+    class SetBackColor extends CountDownTimer {
+        public View.OnClickListener onCLick;
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         */
+
+        public SetBackColor(long millisInFuture, long countDownInterval, View.OnClickListener v) {
+            super(millisInFuture, countDownInterval);
+            onCLick = v;
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            for (int i = 0; i < 4; i++) {
+                if (vars[i].getText() == resultText)
+                    vars[i].setBackground(getDrawable(R.drawable.style_btn_white_green_press));
+                else vars[i].setBackground(getDrawable(R.drawable.style_btn_white_red_press));
+            }
+
+            timerFinish = false;
+        }
+
+        @Override
+        public void onFinish() {
+            for (int i = 0; i < 4; i++) {
+                vars[i].setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+            }
+            var1.setOnClickListener(onCLick);
+            var2.setOnClickListener(onCLick);
+            var3.setOnClickListener(onCLick);
+            var4.setOnClickListener(onCLick);
+            logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            resultText = logCountry.strResult;
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    class RoundTimer extends CountDownTimer {
+        final ProgressBar pb;
+
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         * @param pb
+         */
+
+        public RoundTimer(long millisInFuture, long countDownInterval, ProgressBar pb, boolean cancelTimer) {
+            super(millisInFuture, countDownInterval);
+            this.pb = pb;
+            if (cancelTimer) cancel();
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            timerFinish = false;
+            pb.setProgress((int) millisUntilFinished / progressScale);
+            if (millisUntilFinished < 2000) {
+                pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
+            } else
+                pb.setProgressTintList(ColorStateList.valueOf(Color.GREEN));
+        }
+
+        @Override
+        public void onFinish() {
+
+            count = count - 2;
+            for (int i = 0; i <= 19; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points);
+            }
+            //закрашиваем правильные ответы зеленым
+            for (int i = 0; i < count; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points_green);
+            }
+            //  logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            //resultText=logCountry.strResult;
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    //system btn BACK Start
+    @Override
+    public void onBackPressed() {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
+                backToast.cancel();
+                Intent intent = new Intent(GeoLvl3.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
+
+            }
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
+            backToast.show();
+        }
+        backPressedTime = System.currentTimeMillis();
+    }
+    //system btn BACK End
+
+}
+
+
Index: app/src/main/java/space/korolev/quiz/Activities/Level5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/Level5.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/Activities/Level5.java	(date 1623062244290)
@@ -36,6 +36,7 @@
 
     public DataBaseEditor dbEditor;
 
+    public SetBackColor setBackColor;
     public RoundTimer roundTimer;
 
     public boolean startLevel;
@@ -50,29 +51,28 @@
 
     //settings of timer
     public final long millisInFuture = 6000;
-    public  final long countDownInterval = 500;
-    public final int progressScale = (int)millisInFuture/100;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
 
     //initialize View container
     ProgressBar pb_timeLeft;
     TextView tv_levels;
     TextView tv;
-    public  TextView tvdend;
+    public TextView tvdend;
     public TextView tv_levelTime;
+    public TextView[] vars;
 
-public TextView quest, var1,var2,var3,var4;
+    public TextView quest, var1, var2, var3, var4;
 
     public LogicNumber4Lines logNum;
     // add array of progress start\
     public int[] progress = {
-            R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-            R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-            R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
+            R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+            R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+            R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
     // add array of progress end
 
 
-
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -82,12 +82,13 @@
         var2 = findViewById(R.id.text_set2);
         var3 = findViewById(R.id.text_set3);
         var4 = findViewById(R.id.text_set4);
+        vars = new TextView[]{var1, var2, var3, var4};
 
         Context context = Level5.this;
 
         //initialize logic calculator, n = 1..2 (difficult)
         logNum = new LogicNumber4Lines(quest, var1, var2, var3, var4, difficult);
-        resultText=logNum.arrLine[0];
+        resultText = logNum.arrLine[0];
 
         // add array of progress start\
 
@@ -98,12 +99,12 @@
 
         pb_timeLeft = findViewById(R.id.pb_TimeLeft);
         //timer settings
-        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
         //______________________________
 
         //развернуть игру на весь экран - начало
         Window w = getWindow();
-        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
         //развернуть игру на весь экран - конец
 
         //вызов диалогового окна в начале игры - начало
@@ -116,17 +117,16 @@
         dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose = (TextView)dialog.findViewById(R.id.btnclose);
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
         btnclose.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level5.this,GameLevels.class);
+                    Intent intent = new Intent(Level5.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
                 dialog.dismiss();//close dialog wnd
             }
@@ -141,8 +141,8 @@
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 //LEVEL TIMER INITIALIZE
-                startLevel=true;
-                levelTimer= new LevelTimer(tv_levelTime,getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo),startLevel);
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
                 levelTimer.runTimer();
                 //__________________________________________
                 dialog.dismiss();//close dialog wnd
@@ -167,17 +167,16 @@
         dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose2 = (TextView)dialogEnd.findViewById(R.id.btnclose);
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
         btnclose2.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level5.this,GameLevels.class);
+                    Intent intent = new Intent(Level5.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
 
                 }
                 dialogEnd.dismiss();//close dialog wnd
@@ -193,11 +192,10 @@
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level5.this, Level3.class);
+                    Intent intent = new Intent(Level5.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e) {
+                } catch (Exception e) {
 
                 }
 
@@ -209,44 +207,41 @@
         //___________________________________
 
 
-
         // bnt back start
-        Button btn_back = (Button)findViewById(R.id.btn_lvl_back);
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
         btn_back.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 try {
-                    Intent intent = new Intent(Level5.this,GameLevels.class);
+                    Intent intent = new Intent(Level5.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
             }
         });
 
 
         //закрашиваем прогресс серым цветом
-        for (int i=0; i<20; i++) {
+        for (int i = 0; i < 20; i++) {
             tv = findViewById(progress[i]);
             tv.setBackgroundResource(R.drawable.style_points);
         }
 
 
-
         View.OnClickListener onClickListener = new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 switch (v.getId()) {
                     case R.id.text_set1:
-                        if (var1.getText() == resultText) count=count+1;
+                        if (var1.getText() == resultText) count = count + 1;
                         else {
                             if (count > 2) count = count - 2;
                             else count = 0;
                         }
                         break;
                     case R.id.text_set2:
-                         if (var2.getText() == resultText) count=count+1;
+                        if (var2.getText() == resultText) count = count + 1;
                         else {
                             if (count > 2) count = count - 2;
                             else count = 0;
@@ -254,7 +249,7 @@
                         break;
                     case R.id.text_set3:
 
-                         if (var3.getText() == resultText) count=count+1;
+                        if (var3.getText() == resultText) count = count + 1;
                         else {
                             if (count > 2) count = count - 2;
                             else count = 0;
@@ -262,38 +257,39 @@
                         break;
                     case R.id.text_set4:
 
-                         if (var4.getText() == resultText) count=count+1;
+                        if (var4.getText() == resultText) count = count + 1;
                         else {
                             if (count > 2) count = count - 2;
                             else count = 0;
                         }
-                       break;
+                        break;
                 }
                 roundTimer.cancel();
-                roundTimer.start();
                 //закрашиваем прогресс серым цветом
-                for (int i=0; i<20; i++) {
+                for (int i = 0; i < 20; i++) {
                     tv = findViewById(progress[i]);
                     tv.setBackgroundResource(R.drawable.style_points);
                 }
                 //закрашиваем правильные ответы зеленым
-                for (int i=0; i<count; i++) {
+                for (int i = 0; i < count; i++) {
                     tv = findViewById(progress[i]);
                     tv.setBackgroundResource(R.drawable.style_points_green);
                 }
 
 
-                if (count == 20)
-                {
+                if (count == 20) {
                     tvdend.setText(levelTimer.runTimer());
-           //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                    startLevel=false;
+                    //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                    startLevel = false;
                     levelTimer.resetSeconds();
                     dialogEnd.show();
-                }
-                else {
-                    logNum = new LogicNumber4Lines(quest, var1, var2, var3, var4, difficult);
-                    resultText = logNum.arrLine[0];
+                } else {
+                    setBackColor = new SetBackColor(1000, 100, this);
+                    setBackColor.start();
+                    var1.setOnClickListener(null);
+                    var2.setOnClickListener(null);
+                    var3.setOnClickListener(null);
+                    var4.setOnClickListener(null);
                 }
             }
         };
@@ -306,8 +302,48 @@
     }
 
 
+    class SetBackColor extends CountDownTimer {
+        public View.OnClickListener onCLick;
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         */
 
+        public SetBackColor(long millisInFuture, long countDownInterval, View.OnClickListener v) {
+            super(millisInFuture, countDownInterval);
+            onCLick = v;
+        }
 
+        @Override
+        public void onTick(long millisUntilFinished) {
+            for (int i = 0; i < 4; i++) {
+                if (vars[i].getText() == resultText)
+                    vars[i].setBackground(getDrawable(R.drawable.style_btn_white_green_press));
+                else vars[i].setBackground(getDrawable(R.drawable.style_btn_white_red_press));
+            }
+
+            timerFinish = false;
+        }
+
+        @Override
+        public void onFinish() {
+            for (int i = 0; i < 4; i++) {
+                vars[i].setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+            }
+            var1.setOnClickListener(onCLick);
+            var2.setOnClickListener(onCLick);
+            var3.setOnClickListener(onCLick);
+            var4.setOnClickListener(onCLick);
+            logNum = new LogicNumber4Lines(quest, var1, var2, var3, var4, difficult);
+            resultText = logNum.arrLine[0];
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
 
 
     class RoundTimer extends CountDownTimer {
@@ -331,7 +367,7 @@
 
         @Override
         public void onTick(long millisUntilFinished) {
-            timerFinish=false;
+            timerFinish = false;
             pb.setProgress((int) millisUntilFinished / progressScale);
             if (millisUntilFinished < 2000) {
                 pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
@@ -342,7 +378,7 @@
         @Override
         public void onFinish() {
 
-            count=count-2;
+            count = count - 2;
             for (int i = 0; i <= 19; i++) {
                 tv = findViewById(progress[i]);
                 tv.setBackgroundResource(R.drawable.style_points);
@@ -354,9 +390,9 @@
             }
             logNum = new LogicNumber4Lines(quest, var1, var2, var3, var4, difficult);
             resultText = logNum.arrLine[0];
-            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
             roundTimer.start();
-            timerStarted=true;
+            timerStarted = true;
 
         }
 
@@ -366,26 +402,20 @@
 
     //system btn BACK Start
     @Override
-    public void onBackPressed()
-    {
+    public void onBackPressed() {
 
 
-        if (backPressedTime + 2000 > System.currentTimeMillis())
-        {
-            try
-            {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
                 backToast.cancel();
-                Intent intent = new Intent(Level5.this,GameLevels.class);
-                startActivity(intent);finish();
-            }
-            catch (Exception e)
-            {
+                Intent intent = new Intent(Level5.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
 
             }
-        }
-        else
-        {
-            backToast = Toast.makeText(getBaseContext(),"Нажмите ещё раз, чтобы выйти из уровня",Toast.LENGTH_LONG);
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
             backToast.show();
         }
         backPressedTime = System.currentTimeMillis();
Index: app/src/main/res/drawable/style_btn_white_green_press.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/style_btn_white_green_press.xml	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/res/drawable/style_btn_white_green_press.xml	(date 1623059721330)
@@ -2,5 +2,5 @@
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
     <stroke android:width="2dp" android:color="@color/white"></stroke>
     <corners android:radius="20dp"></corners>
-    <solid android:color="@color/green80"></solid>
+    <solid android:color="@color/green60"></solid>
 </shape>
\ No newline at end of file
Index: app/src/main/java/space/korolev/quiz/Activities/GeoLvl2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/GeoLvl2.java	(date 1623062244259)
+++ app/src/main/java/space/korolev/quiz/Activities/GeoLvl2.java	(date 1623062244259)
@@ -0,0 +1,438 @@
+package space.korolev.quiz.Activities;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.ColorStateList;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Bundle;
+import android.os.CountDownTimer;
+import android.util.Log;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import space.korolev.quiz.DataBaseEditor;
+import space.korolev.quiz.LevelTimer;
+import space.korolev.quiz.LogicCoutry4Lines;
+import space.korolev.quiz.R;
+
+
+public class GeoLvl2 extends AppCompatActivity {
+
+    Dialog dialog;
+    Dialog dialogEnd;
+
+    public boolean timerStarted;
+    public boolean timerFinish;
+    public boolean timerCancel;
+    private Toast backToast;
+
+    public DataBaseEditor dbEditor;
+
+    public RoundTimer roundTimer;
+    public SetBackColor setBackColor;
+
+    public boolean startLevel;
+    public LevelTimer levelTimer;
+
+    public int count = 0;// счетчик правильных ответов
+    private long backPressedTime;
+
+    public String resultText;
+
+    //settings of timer
+    public final long millisInFuture = 6000;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
+
+    //initialize View container
+    ProgressBar pb_timeLeft;
+    TextView tv_levels;
+    TextView tv;
+    public TextView tvdend;
+    public TextView tv_levelTime;
+
+    public TextView quest, var1, var2, var3, var4;
+
+    public LogicCoutry4Lines logCountry;
+    // add array of progress start\
+    public int[] progress = {
+            R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+            R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+            R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
+    // add array of progress end
+
+    public String[] countries;
+    public TextView[] vars;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.universal4line);
+        quest = findViewById(R.id.text_setquest);
+        var1 = findViewById(R.id.text_set1);
+        var2 = findViewById(R.id.text_set2);
+        var3 = findViewById(R.id.text_set3);
+        var4 = findViewById(R.id.text_set4);
+        countries = getResources().getStringArray(R.array.asiaCountries);
+
+        Context context = this;
+
+        //initialize logic
+        logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+        Log.d("Text", "Country" + quest.getText());
+        resultText = logCountry.strResult;
+        Log.d("Text", "City" + resultText);
+        // add array of progress start\
+
+        vars = new TextView[]{var1, var2, var3, var4};
+
+        tv_levelTime = findViewById(R.id.tv_roundtime);
+        tv_levels = findViewById(R.id.tx_levels);
+        tv_levels.setText(R.string.level4);
+
+        pb_timeLeft = findViewById(R.id.pb_TimeLeft);
+        //timer settings
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+        //______________________________
+
+        //развернуть игру на весь экран - начало
+        Window w = getWindow();
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        //развернуть игру на весь экран - конец
+
+        //вызов диалогового окна в начале игры - начало
+        dialog = new Dialog(this);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialog.setContentView(R.layout.previewdialog);
+        ImageView imgd = dialog.findViewById(R.id.previewimg1);
+        imgd.setImageResource(R.drawable.previewlevel3img);
+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
+        btnclose.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl2.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+                dialog.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncont = (Button) dialog.findViewById(R.id.btncontinue);
+        btncont.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                //LEVEL TIMER INITIALIZE
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
+                levelTimer.runTimer();
+                //__________________________________________
+                dialog.dismiss();//close dialog wnd
+
+
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+
+        dialog.show();
+
+        //вызов диалогового окна в конце игры - начало
+        dialogEnd = new Dialog(this);
+        dialogEnd.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialogEnd.setContentView(R.layout.dialogend);
+        tvdend = dialogEnd.findViewById(R.id.textdescrend1);
+        tvdend.setText("ERROR");
+        dialogEnd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialogEnd.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
+                WindowManager.LayoutParams.MATCH_PARENT);
+        dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
+        btnclose2.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl2.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncontEnd = (Button) dialogEnd.findViewById(R.id.btncontinue);
+        btncontEnd.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl2.this, GeoLvl3.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+        //___________________________________
+
+
+        // bnt back start
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
+        btn_back.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+                    Intent intent = new Intent(GeoLvl2.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+            }
+        });
+
+
+        //закрашиваем прогресс серым цветом
+        for (int i = 0; i < 20; i++) {
+            tv = findViewById(progress[i]);
+            tv.setBackgroundResource(R.drawable.style_points);
+        }
+
+
+        View.OnClickListener onClickListener = new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                // Log.d("COUNTR","Num  "+count);
+                Log.d("Text", "" + resultText);
+                switch (v.getId()) {
+                    case R.id.text_set1:
+                        if (var1.getText() == resultText) {
+                            //                      var1.setTextColor(getColor(R.color.green80));
+                            count = count + 1;
+                        } else {
+                            //                           var1.setTextColor(getColor(R.color.red80));
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set2:
+                        if (var2.getText() == resultText) {
+                            //             var2.setBackground(getDrawable(R.drawable.btn_stroke_white_press_green)); //(R.drawable.btn_stroke_white_press_green);
+                            count = count + 1;
+                        } else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set3:
+
+                        if (var3.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set4:
+
+                        if (var4.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                }
+                roundTimer.cancel();
+
+                //закрашиваем прогресс серым цветом
+                for (int i = 0; i < 20; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points);
+                }
+                //закрашиваем правильные ответы зеленым
+                for (int i = 0; i < count; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points_green);
+                }
+
+
+                if (count == 20) {
+                    tvdend.setText(levelTimer.runTimer());
+                    //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                    startLevel = false;
+                    levelTimer.resetSeconds();
+                    dialogEnd.show();
+                } else {
+                    setBackColor = new SetBackColor(1000, 100, this);
+                    setBackColor.start();
+                    var1.setOnClickListener(null);
+                    var2.setOnClickListener(null);
+                    var3.setOnClickListener(null);
+                    var4.setOnClickListener(null);
+                }
+
+                //    Log.d("COUNTER","Text:"+resultText);
+                //       var1.setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+
+            }
+
+        };
+
+        var1.setOnClickListener(onClickListener);
+        var2.setOnClickListener(onClickListener);
+        var3.setOnClickListener(onClickListener);
+        var4.setOnClickListener(onClickListener);
+
+    }
+
+
+    class SetBackColor extends CountDownTimer {
+        public View.OnClickListener onCLick;
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         */
+
+        public SetBackColor(long millisInFuture, long countDownInterval, View.OnClickListener v) {
+            super(millisInFuture, countDownInterval);
+            onCLick = v;
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            for (int i = 0; i < 4; i++) {
+                if (vars[i].getText() == resultText)
+                    vars[i].setBackground(getDrawable(R.drawable.style_btn_white_green_press));
+                else vars[i].setBackground(getDrawable(R.drawable.style_btn_white_red_press));
+            }
+
+            timerFinish = false;
+        }
+
+        @Override
+        public void onFinish() {
+            for (int i = 0; i < 4; i++) {
+                vars[i].setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+            }
+            var1.setOnClickListener(onCLick);
+            var2.setOnClickListener(onCLick);
+            var3.setOnClickListener(onCLick);
+            var4.setOnClickListener(onCLick);
+            logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            resultText = logCountry.strResult;
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    class RoundTimer extends CountDownTimer {
+        final ProgressBar pb;
+
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         * @param pb
+         */
+
+        public RoundTimer(long millisInFuture, long countDownInterval, ProgressBar pb, boolean cancelTimer) {
+            super(millisInFuture, countDownInterval);
+            this.pb = pb;
+            if (cancelTimer) cancel();
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            timerFinish = false;
+            pb.setProgress((int) millisUntilFinished / progressScale);
+            if (millisUntilFinished < 2000) {
+                pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
+            } else
+                pb.setProgressTintList(ColorStateList.valueOf(Color.GREEN));
+        }
+
+        @Override
+        public void onFinish() {
+
+            count = count - 2;
+            for (int i = 0; i <= 19; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points);
+            }
+            //закрашиваем правильные ответы зеленым
+            for (int i = 0; i < count; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points_green);
+            }
+            //  logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            //resultText=logCountry.strResult;
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    //system btn BACK Start
+    @Override
+    public void onBackPressed() {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
+                backToast.cancel();
+                Intent intent = new Intent(GeoLvl2.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
+
+            }
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
+            backToast.show();
+        }
+        backPressedTime = System.currentTimeMillis();
+    }
+    //system btn BACK End
+
+}
+
+
Index: app/src/main/java/space/korolev/quiz/Activities/Level4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/Level4.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/Activities/Level4.java	(date 1623062244305)
@@ -37,7 +37,7 @@
     public DataBaseEditor dbEditor;
 
     public RoundTimer roundTimer;
-
+    public SetBackColor setBackColor;
     public boolean startLevel;
     public LevelTimer levelTimer;
 
@@ -47,29 +47,28 @@
 
     public String resultText;
     public final long millisInFuture = 4000;
-    public  final long countDownInterval = 500;
-    public final int progressScale = (int)millisInFuture/100;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
 
     //initialize View container
     ProgressBar pb_timeLeft;
     TextView tv_levels;
     TextView tv;
-    public  TextView tvdend;
+    public TextView tvdend;
     public TextView tv_levelTime;
+    public TextView[] vars;
 
-public TextView quest, var1,var2,var3,var4;
+    public TextView quest, var1, var2, var3, var4;
 
     public LogicNumber4Lines logNum;
     // add array of progress start\
     public int[] progress = {
-            R.id.point1,R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
-            R.id.point8, R.id.point9,R.id.point10,R.id.point11,R.id.point12,R.id.point13,R.id.point14,R.id.point15,
-            R.id.point16,R.id.point17,R.id.point18,R.id.point19,R.id.point20,};
+            R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+            R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+            R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
     // add array of progress end
 
 
-
-
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
@@ -80,11 +79,13 @@
         var3 = findViewById(R.id.text_set3);
         var4 = findViewById(R.id.text_set4);
 
+        vars = new TextView[]{var1, var2, var3, var4};
+
         Context context = Level4.this;
 
 
         logNum = new LogicNumber4Lines(quest, var1, var2, var3, var4, 1);
-        resultText=logNum.arrLine[0];
+        resultText = logNum.arrLine[0];
 
         // add array of progress start\
 
@@ -95,12 +96,12 @@
 
         pb_timeLeft = findViewById(R.id.pb_TimeLeft);
         //timer settings
-        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
         //______________________________
 
         //развернуть игру на весь экран - начало
         Window w = getWindow();
-        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
         //развернуть игру на весь экран - конец
 
         //вызов диалогового окна в начале игры - начало
@@ -113,17 +114,16 @@
         dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose = (TextView)dialog.findViewById(R.id.btnclose);
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
         btnclose.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level4.this,GameLevels.class);
+                    Intent intent = new Intent(Level4.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
                 dialog.dismiss();//close dialog wnd
             }
@@ -138,8 +138,8 @@
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 //LEVEL TIMER INITIALIZE
-                startLevel=true;
-                levelTimer= new LevelTimer(tv_levelTime,getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo),startLevel);
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
                 levelTimer.runTimer();
                 //__________________________________________
                 dialog.dismiss();//close dialog wnd
@@ -164,17 +164,16 @@
         dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
 
         //кнопка, которая закрывает диалог окно - начало
-        TextView btnclose2 = (TextView)dialogEnd.findViewById(R.id.btnclose);
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
         btnclose2.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level4.this,GameLevels.class);
+                    Intent intent = new Intent(Level4.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
 
                 }
                 dialogEnd.dismiss();//close dialog wnd
@@ -190,11 +189,10 @@
             public void onClick(View v) {
                 //обработка нажатия кнопки - начало
                 try {
-                    Intent intent = new Intent(Level4.this, Level3.class);
+                    Intent intent = new Intent(Level4.this, Level5.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e) {
+                } catch (Exception e) {
 
                 }
 
@@ -206,44 +204,41 @@
         //___________________________________
 
 
-
         // bnt back start
-        Button btn_back = (Button)findViewById(R.id.btn_lvl_back);
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
         btn_back.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 try {
-                    Intent intent = new Intent(Level4.this,GameLevels.class);
+                    Intent intent = new Intent(Level4.this, GameLevels.class);
                     startActivity(intent);
                     finish();
-                }
-                catch (Exception e){
+                } catch (Exception e) {
                 }
             }
         });
 
 
         //закрашиваем прогресс серым цветом
-        for (int i=0; i<20; i++) {
+        for (int i = 0; i < 20; i++) {
             tv = findViewById(progress[i]);
             tv.setBackgroundResource(R.drawable.style_points);
         }
 
 
-
         View.OnClickListener onClickListener = new View.OnClickListener() {
             @Override
             public void onClick(View v) {
                 switch (v.getId()) {
                     case R.id.text_set1:
-                        if (var1.getText() == resultText) count=count+1;
+                        if (var1.getText() == resultText) count = count + 1;
                         else {
                             if (count > 2) count = count - 2;
                             else count = 0;
                         }
                         break;
                     case R.id.text_set2:
-                         if (var2.getText() == resultText) count=count+1;
+                        if (var2.getText() == resultText) count = count + 1;
                         else {
                             if (count > 2) count = count - 2;
                             else count = 0;
@@ -251,7 +246,7 @@
                         break;
                     case R.id.text_set3:
 
-                         if (var3.getText() == resultText) count=count+1;
+                        if (var3.getText() == resultText) count = count + 1;
                         else {
                             if (count > 2) count = count - 2;
                             else count = 0;
@@ -259,38 +254,39 @@
                         break;
                     case R.id.text_set4:
 
-                         if (var4.getText() == resultText) count=count+1;
+                        if (var4.getText() == resultText) count = count + 1;
                         else {
                             if (count > 2) count = count - 2;
                             else count = 0;
                         }
-                       break;
+                        break;
                 }
                 roundTimer.cancel();
-                roundTimer.start();
                 //закрашиваем прогресс серым цветом
-                for (int i=0; i<20; i++) {
+                for (int i = 0; i < 20; i++) {
                     tv = findViewById(progress[i]);
                     tv.setBackgroundResource(R.drawable.style_points);
                 }
                 //закрашиваем правильные ответы зеленым
-                for (int i=0; i<count; i++) {
+                for (int i = 0; i < count; i++) {
                     tv = findViewById(progress[i]);
                     tv.setBackgroundResource(R.drawable.style_points_green);
                 }
 
 
-                if (count == 20)
-                {
+                if (count == 20) {
                     tvdend.setText(levelTimer.runTimer());
-           //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
-                    startLevel=false;
+                    //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                    startLevel = false;
                     levelTimer.resetSeconds();
                     dialogEnd.show();
-                }
-                else {
-                    logNum = new LogicNumber4Lines(quest, var1, var2, var3, var4, 1);
-                    resultText = logNum.arrLine[0];
+                } else {
+                    setBackColor = new SetBackColor(1000, 100, this);
+                    setBackColor.start();
+                    var1.setOnClickListener(null);
+                    var2.setOnClickListener(null);
+                    var3.setOnClickListener(null);
+                    var4.setOnClickListener(null);
                 }
             }
         };
@@ -303,8 +299,48 @@
     }
 
 
+    class SetBackColor extends CountDownTimer {
+        public View.OnClickListener onCLick;
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         */
 
+        public SetBackColor(long millisInFuture, long countDownInterval, View.OnClickListener v) {
+            super(millisInFuture, countDownInterval);
+            onCLick = v;
+        }
 
+        @Override
+        public void onTick(long millisUntilFinished) {
+            for (int i = 0; i < 4; i++) {
+                if (vars[i].getText() == resultText)
+                    vars[i].setBackground(getDrawable(R.drawable.style_btn_white_green_press));
+                else vars[i].setBackground(getDrawable(R.drawable.style_btn_white_red_press));
+            }
+
+            timerFinish = false;
+        }
+
+        @Override
+        public void onFinish() {
+            for (int i = 0; i < 4; i++) {
+                vars[i].setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+            }
+            var1.setOnClickListener(onCLick);
+            var2.setOnClickListener(onCLick);
+            var3.setOnClickListener(onCLick);
+            var4.setOnClickListener(onCLick);
+            logNum = new LogicNumber4Lines(quest, var1, var2, var3, var4, 1);
+            resultText = logNum.arrLine[0];
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
 
 
     class RoundTimer extends CountDownTimer {
@@ -328,7 +364,7 @@
 
         @Override
         public void onTick(long millisUntilFinished) {
-            timerFinish=false;
+            timerFinish = false;
             pb.setProgress((int) millisUntilFinished / progressScale);
             if (millisUntilFinished < 2000) {
                 pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
@@ -339,7 +375,7 @@
         @Override
         public void onFinish() {
 
-            count=count-2;
+            count = count - 2;
             for (int i = 0; i <= 19; i++) {
                 tv = findViewById(progress[i]);
                 tv.setBackgroundResource(R.drawable.style_points);
@@ -351,9 +387,9 @@
             }
             logNum = new LogicNumber4Lines(quest, var1, var2, var3, var4, 1);
             resultText = logNum.arrLine[0];
-            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft,timerCancel);
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
             roundTimer.start();
-            timerStarted=true;
+            timerStarted = true;
 
         }
 
@@ -363,26 +399,20 @@
 
     //system btn BACK Start
     @Override
-    public void onBackPressed()
-    {
+    public void onBackPressed() {
 
 
-        if (backPressedTime + 2000 > System.currentTimeMillis())
-        {
-            try
-            {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
                 backToast.cancel();
-                Intent intent = new Intent(Level4.this,GameLevels.class);
-                startActivity(intent);finish();
-            }
-            catch (Exception e)
-            {
+                Intent intent = new Intent(Level4.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
 
             }
-        }
-        else
-        {
-            backToast = Toast.makeText(getBaseContext(),"Нажмите ещё раз, чтобы выйти из уровня",Toast.LENGTH_LONG);
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
             backToast.show();
         }
         backPressedTime = System.currentTimeMillis();
Index: app/src/main/res/drawable/style_btn_white_red_press.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/drawable/style_btn_white_red_press.xml	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/res/drawable/style_btn_white_red_press.xml	(date 1623059724825)
@@ -2,5 +2,5 @@
 <shape xmlns:android="http://schemas.android.com/apk/res/android">
     <stroke android:width="2dp" android:color="@color/white"></stroke>
     <corners android:radius="20dp"></corners>
-    <solid android:color="@color/red80"></solid>
+    <solid android:color="@color/red60"></solid>
 </shape>
\ No newline at end of file
Index: app/src/main/res/values/textforlevels.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/textforlevels.xml	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/res/values/textforlevels.xml	(date 1623060852478)
@@ -202,7 +202,7 @@
     </string-array>
 
 
-    <string-array name="NorthCenterAmerCountries">
+    <string-array name="northCenterAmerCountries">
 
         <item>Белиз</item>
         <item>Бельмопан</item>
@@ -234,7 +234,7 @@
     </string-array>
 
 
-    <string-array name="CaribbeanCountries">
+    <string-array name="caribbeanCountries">
 
         <item>Ангилья</item>
         <item>Валли</item>
@@ -289,7 +289,7 @@
 
 
 
-    <string-array name="SouthAmerCountries">
+    <string-array name="southAmerCountries">
 
         <item>Аргентина</item>
         <item>Буэнос-Айрес</item>
@@ -326,7 +326,7 @@
 
 
 
-    <string-array name="AfricaCountries">
+    <string-array name="africaCountries">
 
         <item>Алжир</item>
         <item>Алжир</item>
Index: app/src/main/res/values/colors.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/values/colors.xml	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/res/values/colors.xml	(date 1623059725882)
@@ -10,6 +10,6 @@
     <color name="black60">#60000000</color>
     <color name="blue">#48d1ff</color>
     <color name="green">#9019ff19</color>
-    <color name="green80">#CC07E807</color>
-    <color name="red80">#CCD90909</color>
+    <color name="green60">#9907E807</color>
+    <color name="red60">#99D90909</color>
 </resources>
\ No newline at end of file
Index: app/src/main/java/space/korolev/quiz/Activities/GameLevels.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/GameLevels.java	(revision ae0e2f0497fa7b3b9a436e48290881ae4b6c0926)
+++ app/src/main/java/space/korolev/quiz/Activities/GameLevels.java	(date 1623062244264)
@@ -25,37 +25,33 @@
 
         //развернуть игру на весь экран - начало
         Window w = getWindow();
-        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
         //развернуть игру на весь экран - конец
 
 
-        Button buttonBack = (Button)findViewById(R.id.btn_back);
+        Button buttonBack = (Button) findViewById(R.id.btn_back);
         buttonBack.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                try
-                {
+                try {
                     Intent intent = new Intent(GameLevels.this, MainActivity.class);
-                    startActivity(intent);finish();
-                }
-                catch (Exception e)
-                {
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
 
                 }
             }
         });
 
-        Button buttonRank = (Button)findViewById(R.id.btn_rank);
+        Button buttonRank = (Button) findViewById(R.id.btn_rank);
         buttonRank.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                try
-                {
+                try {
                     Intent intent = new Intent(GameLevels.this, AccountRank.class);
-                    startActivity(intent);finish();
-                }
-                catch (Exception e)
-                {
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
 
                 }
             }
@@ -63,17 +59,15 @@
 
 
         //btn 1 lvl = start
-        TextView textView1 = (TextView)findViewById(R.id.textView1);
+        TextView textView1 = (TextView) findViewById(R.id.textView1);
         textView1.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                try
-                {
-                    Intent intent = new Intent(GameLevels.this,Level1.class);
-                    startActivity(intent);finish();
-                }
-                catch (Exception e)
-                {
+                try {
+                    Intent intent = new Intent(GameLevels.this, Level1.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
 
                 }
             }
@@ -81,17 +75,15 @@
         //btn 1 lvl = end
 
         //btn 2 lvl = start
-        TextView textView2 = (TextView)findViewById(R.id.textView2);
+        TextView textView2 = (TextView) findViewById(R.id.textView2);
         textView2.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                try
-                {
-                    Intent intent = new Intent(GameLevels.this,Level2.class);
-                    startActivity(intent);finish();
-                }
-                catch (Exception e)
-                {
+                try {
+                    Intent intent = new Intent(GameLevels.this, Level2.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
 
                 }
             }
@@ -99,17 +91,15 @@
         //btn 2 lvl = end
 
         //btn 3 lvl = start
-        TextView textView3 = (TextView)findViewById(R.id.textView3);
+        TextView textView3 = (TextView) findViewById(R.id.textView3);
         textView3.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                try
-                {
-                    Intent intent = new Intent(GameLevels.this,Level3.class);
-                    startActivity(intent);finish();
-                }
-                catch (Exception e)
-                {
+                try {
+                    Intent intent = new Intent(GameLevels.this, Level3.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
 
                 }
             }
@@ -117,19 +107,17 @@
         //btn 3 lvl = end
 
         //btn 4 lvl = start
-        TextView textView4 = (TextView)findViewById(R.id.textView4);
+        TextView textView4 = (TextView) findViewById(R.id.textView4);
         textView4.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                try
-                {
+                try {
 
-                    Intent intent = new Intent(GameLevels.this,Level4.class);
-                    startActivity(intent);finish();
+                    Intent intent = new Intent(GameLevels.this, Level4.class);
+                    startActivity(intent);
+                    finish();
 
-                }
-                catch (Exception e)
-                {
+                } catch (Exception e) {
 
                 }
             }
@@ -137,19 +125,17 @@
         //btn 4 lvl = end
 
         //btn 5 lvl = start
-        TextView textView5 = (TextView)findViewById(R.id.textView5);
+        TextView textView5 = (TextView) findViewById(R.id.textView5);
         textView5.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                try
-                {
+                try {
 
-                    Intent intent = new Intent(GameLevels.this,Level5.class);
-                    startActivity(intent);finish();
+                    Intent intent = new Intent(GameLevels.this, Level5.class);
+                    startActivity(intent);
+                    finish();
 
-                }
-                catch (Exception e)
-                {
+                } catch (Exception e) {
 
                 }
             }
@@ -157,42 +143,126 @@
         //btn 5 lvl = end
 
         //btn 6 lvl = start
-        TextView textView6 = (TextView)findViewById(R.id.textView6);
+        TextView textView6 = (TextView) findViewById(R.id.textView6);
         textView6.setOnClickListener(new View.OnClickListener() {
             @Override
             public void onClick(View v) {
-                try
-                {
+                try {
 
-                    Intent intent = new Intent(GameLevels.this,GeoLvl1.class);
-                    startActivity(intent);finish();
+                    Intent intent = new Intent(GameLevels.this, GeoLvl1.class);
+                    startActivity(intent);
+                    finish();
 
-                }
-                catch (Exception e)
-                {
+                } catch (Exception e) {
 
                 }
             }
         });
         //btn 6 lvl = end
 
+        //btn 7 lvl = start
+        TextView textView7 = (TextView) findViewById(R.id.textView7);
+        textView7.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+
+                    Intent intent = new Intent(GameLevels.this, GeoLvl2.class);
+                    startActivity(intent);
+                    finish();
+
+                } catch (Exception e) {
+
+                }
+            }
+        });
+        //btn 7 lvl = end
+
+        //btn 8 lvl = start
+        TextView textView8 = (TextView) findViewById(R.id.textView8);
+        textView8.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+
+                    Intent intent = new Intent(GameLevels.this, GeoLvl3.class);
+                    startActivity(intent);
+                    finish();
+
+                } catch (Exception e) {
+
+                }
+            }
+        });
+        //btn 8 lvl = end
+
+        //btn 9 lvl = start
+        TextView textView9 = (TextView) findViewById(R.id.textView9);
+        textView9.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+
+                    Intent intent = new Intent(GameLevels.this, GeoLvl4.class);
+                    startActivity(intent);
+                    finish();
+
+                } catch (Exception e) {
+
+                }
+            }
+        });
+        //btn 9 lvl = end
+
+        //btn 10 lvl = start
+        TextView textView10 = (TextView) findViewById(R.id.textView10);
+        textView10.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+
+                    Intent intent = new Intent(GameLevels.this, GeoLvl5.class);
+                    startActivity(intent);
+                    finish();
+
+                } catch (Exception e) {
+
+                }
+            }
+        });
+        //btn 10 lvl = end
+
+        //btn 11 lvl = starta
+        TextView textView11 = (TextView) findViewById(R.id.textView11);
+        textView11.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+
+                    Intent intent = new Intent(GameLevels.this, GeoLvl6.class);
+                    startActivity(intent);
+                    finish();
+
+                } catch (Exception e) {
+
+                }
+            }
+        });
+        //btn 11 lvl = end
 
     }
 
 
     //system btn BACK Start
     @Override
-    public void onBackPressed()
-    {
+    public void onBackPressed() {
 
 
-        try
-        {
-            Intent intent = new Intent(GameLevels.this,MainActivity.class);
-            startActivity(intent);finish();
-        }
-        catch (Exception e)
-        {
+        try {
+            Intent intent = new Intent(GameLevels.this, MainActivity.class);
+            startActivity(intent);
+            finish();
+        } catch (Exception e) {
 
         }
     }
Index: app/src/main/java/space/korolev/quiz/Activities/GeoLvl5.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/GeoLvl5.java	(date 1623062244311)
+++ app/src/main/java/space/korolev/quiz/Activities/GeoLvl5.java	(date 1623062244311)
@@ -0,0 +1,438 @@
+package space.korolev.quiz.Activities;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.ColorStateList;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Bundle;
+import android.os.CountDownTimer;
+import android.util.Log;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import space.korolev.quiz.DataBaseEditor;
+import space.korolev.quiz.LevelTimer;
+import space.korolev.quiz.LogicCoutry4Lines;
+import space.korolev.quiz.R;
+
+
+public class GeoLvl5 extends AppCompatActivity {
+
+    Dialog dialog;
+    Dialog dialogEnd;
+
+    public boolean timerStarted;
+    public boolean timerFinish;
+    public boolean timerCancel;
+    private Toast backToast;
+
+    public DataBaseEditor dbEditor;
+
+    public RoundTimer roundTimer;
+    public SetBackColor setBackColor;
+
+    public boolean startLevel;
+    public LevelTimer levelTimer;
+
+    public int count = 0;// счетчик правильных ответов
+    private long backPressedTime;
+
+    public String resultText;
+
+    //settings of timer
+    public final long millisInFuture = 6000;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
+
+    //initialize View container
+    ProgressBar pb_timeLeft;
+    TextView tv_levels;
+    TextView tv;
+    public TextView tvdend;
+    public TextView tv_levelTime;
+
+    public TextView quest, var1, var2, var3, var4;
+
+    public LogicCoutry4Lines logCountry;
+    // add array of progress start\
+    public int[] progress = {
+            R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+            R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+            R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
+    // add array of progress end
+
+    public String[] countries;
+    public TextView[] vars;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.universal4line);
+        quest = findViewById(R.id.text_setquest);
+        var1 = findViewById(R.id.text_set1);
+        var2 = findViewById(R.id.text_set2);
+        var3 = findViewById(R.id.text_set3);
+        var4 = findViewById(R.id.text_set4);
+        countries = getResources().getStringArray(R.array.southAmerCountries);
+
+        Context context = this;
+
+        //initialize logic
+        logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+        Log.d("Text", "Country" + quest.getText());
+        resultText = logCountry.strResult;
+        Log.d("Text", "City" + resultText);
+        // add array of progress start\
+
+        vars = new TextView[]{var1, var2, var3, var4};
+
+        tv_levelTime = findViewById(R.id.tv_roundtime);
+        tv_levels = findViewById(R.id.tx_levels);
+        tv_levels.setText(R.string.level4);
+
+        pb_timeLeft = findViewById(R.id.pb_TimeLeft);
+        //timer settings
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+        //______________________________
+
+        //развернуть игру на весь экран - начало
+        Window w = getWindow();
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        //развернуть игру на весь экран - конец
+
+        //вызов диалогового окна в начале игры - начало
+        dialog = new Dialog(this);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialog.setContentView(R.layout.previewdialog);
+        ImageView imgd = dialog.findViewById(R.id.previewimg1);
+        imgd.setImageResource(R.drawable.previewlevel3img);
+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
+        btnclose.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl5.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+                dialog.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncont = (Button) dialog.findViewById(R.id.btncontinue);
+        btncont.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                //LEVEL TIMER INITIALIZE
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
+                levelTimer.runTimer();
+                //__________________________________________
+                dialog.dismiss();//close dialog wnd
+
+
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+
+        dialog.show();
+
+        //вызов диалогового окна в конце игры - начало
+        dialogEnd = new Dialog(this);
+        dialogEnd.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialogEnd.setContentView(R.layout.dialogend);
+        tvdend = dialogEnd.findViewById(R.id.textdescrend1);
+        tvdend.setText("ERROR");
+        dialogEnd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialogEnd.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
+                WindowManager.LayoutParams.MATCH_PARENT);
+        dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
+        btnclose2.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl5.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncontEnd = (Button) dialogEnd.findViewById(R.id.btncontinue);
+        btncontEnd.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl5.this, GeoLvl6.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+        //___________________________________
+
+
+        // bnt back start
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
+        btn_back.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+                    Intent intent = new Intent(GeoLvl5.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+            }
+        });
+
+
+        //закрашиваем прогресс серым цветом
+        for (int i = 0; i < 20; i++) {
+            tv = findViewById(progress[i]);
+            tv.setBackgroundResource(R.drawable.style_points);
+        }
+
+
+        View.OnClickListener onClickListener = new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                // Log.d("COUNTR","Num  "+count);
+                Log.d("Text", "" + resultText);
+                switch (v.getId()) {
+                    case R.id.text_set1:
+                        if (var1.getText() == resultText) {
+                            //                      var1.setTextColor(getColor(R.color.green80));
+                            count = count + 1;
+                        } else {
+                            //                           var1.setTextColor(getColor(R.color.red80));
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set2:
+                        if (var2.getText() == resultText) {
+                            //             var2.setBackground(getDrawable(R.drawable.btn_stroke_white_press_green)); //(R.drawable.btn_stroke_white_press_green);
+                            count = count + 1;
+                        } else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set3:
+
+                        if (var3.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set4:
+
+                        if (var4.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                }
+                roundTimer.cancel();
+
+                //закрашиваем прогресс серым цветом
+                for (int i = 0; i < 20; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points);
+                }
+                //закрашиваем правильные ответы зеленым
+                for (int i = 0; i < count; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points_green);
+                }
+
+
+                if (count == 20) {
+                    tvdend.setText(levelTimer.runTimer());
+                    //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                    startLevel = false;
+                    levelTimer.resetSeconds();
+                    dialogEnd.show();
+                } else {
+                    setBackColor = new SetBackColor(1000, 100, this);
+                    setBackColor.start();
+                    var1.setOnClickListener(null);
+                    var2.setOnClickListener(null);
+                    var3.setOnClickListener(null);
+                    var4.setOnClickListener(null);
+                }
+
+                //    Log.d("COUNTER","Text:"+resultText);
+                //       var1.setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+
+            }
+
+        };
+
+        var1.setOnClickListener(onClickListener);
+        var2.setOnClickListener(onClickListener);
+        var3.setOnClickListener(onClickListener);
+        var4.setOnClickListener(onClickListener);
+
+    }
+
+
+    class SetBackColor extends CountDownTimer {
+        public View.OnClickListener onCLick;
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         */
+
+        public SetBackColor(long millisInFuture, long countDownInterval, View.OnClickListener v) {
+            super(millisInFuture, countDownInterval);
+            onCLick = v;
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            for (int i = 0; i < 4; i++) {
+                if (vars[i].getText() == resultText)
+                    vars[i].setBackground(getDrawable(R.drawable.style_btn_white_green_press));
+                else vars[i].setBackground(getDrawable(R.drawable.style_btn_white_red_press));
+            }
+
+            timerFinish = false;
+        }
+
+        @Override
+        public void onFinish() {
+            for (int i = 0; i < 4; i++) {
+                vars[i].setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+            }
+            var1.setOnClickListener(onCLick);
+            var2.setOnClickListener(onCLick);
+            var3.setOnClickListener(onCLick);
+            var4.setOnClickListener(onCLick);
+            logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            resultText = logCountry.strResult;
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    class RoundTimer extends CountDownTimer {
+        final ProgressBar pb;
+
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         * @param pb
+         */
+
+        public RoundTimer(long millisInFuture, long countDownInterval, ProgressBar pb, boolean cancelTimer) {
+            super(millisInFuture, countDownInterval);
+            this.pb = pb;
+            if (cancelTimer) cancel();
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            timerFinish = false;
+            pb.setProgress((int) millisUntilFinished / progressScale);
+            if (millisUntilFinished < 2000) {
+                pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
+            } else
+                pb.setProgressTintList(ColorStateList.valueOf(Color.GREEN));
+        }
+
+        @Override
+        public void onFinish() {
+
+            count = count - 2;
+            for (int i = 0; i <= 19; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points);
+            }
+            //закрашиваем правильные ответы зеленым
+            for (int i = 0; i < count; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points_green);
+            }
+            //  logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            //resultText=logCountry.strResult;
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    //system btn BACK Start
+    @Override
+    public void onBackPressed() {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
+                backToast.cancel();
+                Intent intent = new Intent(GeoLvl5.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
+
+            }
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
+            backToast.show();
+        }
+        backPressedTime = System.currentTimeMillis();
+    }
+    //system btn BACK End
+
+}
+
+
Index: app/src/main/java/space/korolev/quiz/Activities/GeoLvl4.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/GeoLvl4.java	(date 1623062244316)
+++ app/src/main/java/space/korolev/quiz/Activities/GeoLvl4.java	(date 1623062244316)
@@ -0,0 +1,438 @@
+package space.korolev.quiz.Activities;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.ColorStateList;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Bundle;
+import android.os.CountDownTimer;
+import android.util.Log;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import space.korolev.quiz.DataBaseEditor;
+import space.korolev.quiz.LevelTimer;
+import space.korolev.quiz.LogicCoutry4Lines;
+import space.korolev.quiz.R;
+
+
+public class GeoLvl4 extends AppCompatActivity {
+
+    Dialog dialog;
+    Dialog dialogEnd;
+
+    public boolean timerStarted;
+    public boolean timerFinish;
+    public boolean timerCancel;
+    private Toast backToast;
+
+    public DataBaseEditor dbEditor;
+
+    public RoundTimer roundTimer;
+    public SetBackColor setBackColor;
+
+    public boolean startLevel;
+    public LevelTimer levelTimer;
+
+    public int count = 0;// счетчик правильных ответов
+    private long backPressedTime;
+
+    public String resultText;
+
+    //settings of timer
+    public final long millisInFuture = 6000;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
+
+    //initialize View container
+    ProgressBar pb_timeLeft;
+    TextView tv_levels;
+    TextView tv;
+    public TextView tvdend;
+    public TextView tv_levelTime;
+
+    public TextView quest, var1, var2, var3, var4;
+
+    public LogicCoutry4Lines logCountry;
+    // add array of progress start\
+    public int[] progress = {
+            R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+            R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+            R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
+    // add array of progress end
+
+    public String[] countries;
+    public TextView[] vars;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.universal4line);
+        quest = findViewById(R.id.text_setquest);
+        var1 = findViewById(R.id.text_set1);
+        var2 = findViewById(R.id.text_set2);
+        var3 = findViewById(R.id.text_set3);
+        var4 = findViewById(R.id.text_set4);
+        countries = getResources().getStringArray(R.array.northCenterAmerCountries);
+
+        Context context = this;
+
+        //initialize logic
+        logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+        Log.d("Text", "Country" + quest.getText());
+        resultText = logCountry.strResult;
+        Log.d("Text", "City" + resultText);
+        // add array of progress start\
+
+        vars = new TextView[]{var1, var2, var3, var4};
+
+        tv_levelTime = findViewById(R.id.tv_roundtime);
+        tv_levels = findViewById(R.id.tx_levels);
+        tv_levels.setText(R.string.level4);
+
+        pb_timeLeft = findViewById(R.id.pb_TimeLeft);
+        //timer settings
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+        //______________________________
+
+        //развернуть игру на весь экран - начало
+        Window w = getWindow();
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        //развернуть игру на весь экран - конец
+
+        //вызов диалогового окна в начале игры - начало
+        dialog = new Dialog(this);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialog.setContentView(R.layout.previewdialog);
+        ImageView imgd = dialog.findViewById(R.id.previewimg1);
+        imgd.setImageResource(R.drawable.previewlevel3img);
+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
+        btnclose.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl4.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+                dialog.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncont = (Button) dialog.findViewById(R.id.btncontinue);
+        btncont.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                //LEVEL TIMER INITIALIZE
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
+                levelTimer.runTimer();
+                //__________________________________________
+                dialog.dismiss();//close dialog wnd
+
+
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+
+        dialog.show();
+
+        //вызов диалогового окна в конце игры - начало
+        dialogEnd = new Dialog(this);
+        dialogEnd.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialogEnd.setContentView(R.layout.dialogend);
+        tvdend = dialogEnd.findViewById(R.id.textdescrend1);
+        tvdend.setText("ERROR");
+        dialogEnd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialogEnd.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
+                WindowManager.LayoutParams.MATCH_PARENT);
+        dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
+        btnclose2.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl4.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncontEnd = (Button) dialogEnd.findViewById(R.id.btncontinue);
+        btncontEnd.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl4.this, GeoLvl5.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+        //___________________________________
+
+
+        // bnt back start
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
+        btn_back.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+                    Intent intent = new Intent(GeoLvl4.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+            }
+        });
+
+
+        //закрашиваем прогресс серым цветом
+        for (int i = 0; i < 20; i++) {
+            tv = findViewById(progress[i]);
+            tv.setBackgroundResource(R.drawable.style_points);
+        }
+
+
+        View.OnClickListener onClickListener = new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                // Log.d("COUNTR","Num  "+count);
+                Log.d("Text", "" + resultText);
+                switch (v.getId()) {
+                    case R.id.text_set1:
+                        if (var1.getText() == resultText) {
+                            //                      var1.setTextColor(getColor(R.color.green80));
+                            count = count + 1;
+                        } else {
+                            //                           var1.setTextColor(getColor(R.color.red80));
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set2:
+                        if (var2.getText() == resultText) {
+                            //             var2.setBackground(getDrawable(R.drawable.btn_stroke_white_press_green)); //(R.drawable.btn_stroke_white_press_green);
+                            count = count + 1;
+                        } else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set3:
+
+                        if (var3.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set4:
+
+                        if (var4.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                }
+                roundTimer.cancel();
+
+                //закрашиваем прогресс серым цветом
+                for (int i = 0; i < 20; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points);
+                }
+                //закрашиваем правильные ответы зеленым
+                for (int i = 0; i < count; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points_green);
+                }
+
+
+                if (count == 20) {
+                    tvdend.setText(levelTimer.runTimer());
+                    //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                    startLevel = false;
+                    levelTimer.resetSeconds();
+                    dialogEnd.show();
+                } else {
+                    setBackColor = new SetBackColor(1000, 100, this);
+                    setBackColor.start();
+                    var1.setOnClickListener(null);
+                    var2.setOnClickListener(null);
+                    var3.setOnClickListener(null);
+                    var4.setOnClickListener(null);
+                }
+
+                //    Log.d("COUNTER","Text:"+resultText);
+                //       var1.setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+
+            }
+
+        };
+
+        var1.setOnClickListener(onClickListener);
+        var2.setOnClickListener(onClickListener);
+        var3.setOnClickListener(onClickListener);
+        var4.setOnClickListener(onClickListener);
+
+    }
+
+
+    class SetBackColor extends CountDownTimer {
+        public View.OnClickListener onCLick;
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         */
+
+        public SetBackColor(long millisInFuture, long countDownInterval, View.OnClickListener v) {
+            super(millisInFuture, countDownInterval);
+            onCLick = v;
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            for (int i = 0; i < 4; i++) {
+                if (vars[i].getText() == resultText)
+                    vars[i].setBackground(getDrawable(R.drawable.style_btn_white_green_press));
+                else vars[i].setBackground(getDrawable(R.drawable.style_btn_white_red_press));
+            }
+
+            timerFinish = false;
+        }
+
+        @Override
+        public void onFinish() {
+            for (int i = 0; i < 4; i++) {
+                vars[i].setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+            }
+            var1.setOnClickListener(onCLick);
+            var2.setOnClickListener(onCLick);
+            var3.setOnClickListener(onCLick);
+            var4.setOnClickListener(onCLick);
+            logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            resultText = logCountry.strResult;
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    class RoundTimer extends CountDownTimer {
+        final ProgressBar pb;
+
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         * @param pb
+         */
+
+        public RoundTimer(long millisInFuture, long countDownInterval, ProgressBar pb, boolean cancelTimer) {
+            super(millisInFuture, countDownInterval);
+            this.pb = pb;
+            if (cancelTimer) cancel();
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            timerFinish = false;
+            pb.setProgress((int) millisUntilFinished / progressScale);
+            if (millisUntilFinished < 2000) {
+                pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
+            } else
+                pb.setProgressTintList(ColorStateList.valueOf(Color.GREEN));
+        }
+
+        @Override
+        public void onFinish() {
+
+            count = count - 2;
+            for (int i = 0; i <= 19; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points);
+            }
+            //закрашиваем правильные ответы зеленым
+            for (int i = 0; i < count; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points_green);
+            }
+            //  logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            //resultText=logCountry.strResult;
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    //system btn BACK Start
+    @Override
+    public void onBackPressed() {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
+                backToast.cancel();
+                Intent intent = new Intent(GeoLvl4.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
+
+            }
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
+            backToast.show();
+        }
+        backPressedTime = System.currentTimeMillis();
+    }
+    //system btn BACK End
+
+}
+
+
Index: app/src/main/java/space/korolev/quiz/Activities/GeoLvl6.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/space/korolev/quiz/Activities/GeoLvl6.java	(date 1623062244253)
+++ app/src/main/java/space/korolev/quiz/Activities/GeoLvl6.java	(date 1623062244253)
@@ -0,0 +1,438 @@
+package space.korolev.quiz.Activities;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.content.Intent;
+import android.content.res.ColorStateList;
+import android.graphics.Color;
+import android.graphics.drawable.ColorDrawable;
+import android.os.Bundle;
+import android.os.CountDownTimer;
+import android.util.Log;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+import android.widget.Toast;
+
+import androidx.appcompat.app.AppCompatActivity;
+
+import space.korolev.quiz.DataBaseEditor;
+import space.korolev.quiz.LevelTimer;
+import space.korolev.quiz.LogicCoutry4Lines;
+import space.korolev.quiz.R;
+
+
+public class GeoLvl6 extends AppCompatActivity {
+
+    Dialog dialog;
+    Dialog dialogEnd;
+
+    public boolean timerStarted;
+    public boolean timerFinish;
+    public boolean timerCancel;
+    private Toast backToast;
+
+    public DataBaseEditor dbEditor;
+
+    public RoundTimer roundTimer;
+    public SetBackColor setBackColor;
+
+    public boolean startLevel;
+    public LevelTimer levelTimer;
+
+    public int count = 0;// счетчик правильных ответов
+    private long backPressedTime;
+
+    public String resultText;
+
+    //settings of timer
+    public final long millisInFuture = 6000;
+    public final long countDownInterval = 500;
+    public final int progressScale = (int) millisInFuture / 100;
+
+    //initialize View container
+    ProgressBar pb_timeLeft;
+    TextView tv_levels;
+    TextView tv;
+    public TextView tvdend;
+    public TextView tv_levelTime;
+
+    public TextView quest, var1, var2, var3, var4;
+
+    public LogicCoutry4Lines logCountry;
+    // add array of progress start\
+    public int[] progress = {
+            R.id.point1, R.id.point2, R.id.point3, R.id.point4, R.id.point5, R.id.point6, R.id.point7,
+            R.id.point8, R.id.point9, R.id.point10, R.id.point11, R.id.point12, R.id.point13, R.id.point14, R.id.point15,
+            R.id.point16, R.id.point17, R.id.point18, R.id.point19, R.id.point20,};
+    // add array of progress end
+
+    public String[] countries;
+    public TextView[] vars;
+
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.universal4line);
+        quest = findViewById(R.id.text_setquest);
+        var1 = findViewById(R.id.text_set1);
+        var2 = findViewById(R.id.text_set2);
+        var3 = findViewById(R.id.text_set3);
+        var4 = findViewById(R.id.text_set4);
+        countries = getResources().getStringArray(R.array.caribbeanCountries);
+
+        Context context = this;
+
+        //initialize logic
+        logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+        Log.d("Text", "Country" + quest.getText());
+        resultText = logCountry.strResult;
+        Log.d("Text", "City" + resultText);
+        // add array of progress start\
+
+        vars = new TextView[]{var1, var2, var3, var4};
+
+        tv_levelTime = findViewById(R.id.tv_roundtime);
+        tv_levels = findViewById(R.id.tx_levels);
+        tv_levels.setText(R.string.level4);
+
+        pb_timeLeft = findViewById(R.id.pb_TimeLeft);
+        //timer settings
+        roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+        //______________________________
+
+        //развернуть игру на весь экран - начало
+        Window w = getWindow();
+        w.setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);
+        //развернуть игру на весь экран - конец
+
+        //вызов диалогового окна в начале игры - начало
+        dialog = new Dialog(this);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialog.setContentView(R.layout.previewdialog);
+        ImageView imgd = dialog.findViewById(R.id.previewimg1);
+        imgd.setImageResource(R.drawable.previewlevel3img);
+        dialog.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialog.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose = (TextView) dialog.findViewById(R.id.btnclose);
+        btnclose.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl6.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+                dialog.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncont = (Button) dialog.findViewById(R.id.btncontinue);
+        btncont.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                //LEVEL TIMER INITIALIZE
+                startLevel = true;
+                levelTimer = new LevelTimer(tv_levelTime, getResources().getString(R.string.levelsucces), getResources().getString(R.string.levelendtwo), startLevel);
+                levelTimer.runTimer();
+                //__________________________________________
+                dialog.dismiss();//close dialog wnd
+
+
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+
+        dialog.show();
+
+        //вызов диалогового окна в конце игры - начало
+        dialogEnd = new Dialog(this);
+        dialogEnd.requestWindowFeature(Window.FEATURE_NO_TITLE);//hide a title
+        dialogEnd.setContentView(R.layout.dialogend);
+        tvdend = dialogEnd.findViewById(R.id.textdescrend1);
+        tvdend.setText("ERROR");
+        dialogEnd.getWindow().setBackgroundDrawable(new ColorDrawable(Color.TRANSPARENT));//transparent background of dialog wnd
+        dialogEnd.getWindow().setLayout(WindowManager.LayoutParams.MATCH_PARENT,
+                WindowManager.LayoutParams.MATCH_PARENT);
+        dialogEnd.setCancelable(false); //окно нельзя закрыть кропкой назад
+
+        //кнопка, которая закрывает диалог окно - начало
+        TextView btnclose2 = (TextView) dialogEnd.findViewById(R.id.btnclose);
+        btnclose2.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl6.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая закрывает диалог окно - конец
+
+        //кнопка, которая переходит к уровню - начало
+        Button btncontEnd = (Button) dialogEnd.findViewById(R.id.btncontinue);
+        btncontEnd.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                //обработка нажатия кнопки - начало
+                try {
+                    Intent intent = new Intent(GeoLvl6.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+
+                }
+                dialogEnd.dismiss();//close dialog wnd
+            }
+            //обработка нажатия кнопки - конец
+        });
+        //кнопка, которая переходит к уровню - конец
+        //___________________________________
+
+
+        // bnt back start
+        Button btn_back = (Button) findViewById(R.id.btn_lvl_back);
+        btn_back.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                try {
+                    Intent intent = new Intent(GeoLvl6.this, GameLevels.class);
+                    startActivity(intent);
+                    finish();
+                } catch (Exception e) {
+                }
+            }
+        });
+
+
+        //закрашиваем прогресс серым цветом
+        for (int i = 0; i < 20; i++) {
+            tv = findViewById(progress[i]);
+            tv.setBackgroundResource(R.drawable.style_points);
+        }
+
+
+        View.OnClickListener onClickListener = new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                // Log.d("COUNTR","Num  "+count);
+                Log.d("Text", "" + resultText);
+                switch (v.getId()) {
+                    case R.id.text_set1:
+                        if (var1.getText() == resultText) {
+                            //                      var1.setTextColor(getColor(R.color.green80));
+                            count = count + 1;
+                        } else {
+                            //                           var1.setTextColor(getColor(R.color.red80));
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set2:
+                        if (var2.getText() == resultText) {
+                            //             var2.setBackground(getDrawable(R.drawable.btn_stroke_white_press_green)); //(R.drawable.btn_stroke_white_press_green);
+                            count = count + 1;
+                        } else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set3:
+
+                        if (var3.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                    case R.id.text_set4:
+
+                        if (var4.getText() == resultText) count = count + 1;
+                        else {
+                            if (count > 2) count = count - 2;
+                            else count = 0;
+                        }
+                        break;
+                }
+                roundTimer.cancel();
+
+                //закрашиваем прогресс серым цветом
+                for (int i = 0; i < 20; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points);
+                }
+                //закрашиваем правильные ответы зеленым
+                for (int i = 0; i < count; i++) {
+                    tv = findViewById(progress[i]);
+                    tv.setBackgroundResource(R.drawable.style_points_green);
+                }
+
+
+                if (count == 20) {
+                    tvdend.setText(levelTimer.runTimer());
+                    //         dbEditor = new DataBaseEditor(1,1,"Madx", "Levsdfsdfsdfel1", levelTimer.getSeconds(), context);
+                    startLevel = false;
+                    levelTimer.resetSeconds();
+                    dialogEnd.show();
+                } else {
+                    setBackColor = new SetBackColor(1000, 100, this);
+                    setBackColor.start();
+                    var1.setOnClickListener(null);
+                    var2.setOnClickListener(null);
+                    var3.setOnClickListener(null);
+                    var4.setOnClickListener(null);
+                }
+
+                //    Log.d("COUNTER","Text:"+resultText);
+                //       var1.setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+
+            }
+
+        };
+
+        var1.setOnClickListener(onClickListener);
+        var2.setOnClickListener(onClickListener);
+        var3.setOnClickListener(onClickListener);
+        var4.setOnClickListener(onClickListener);
+
+    }
+
+
+    class SetBackColor extends CountDownTimer {
+        public View.OnClickListener onCLick;
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         */
+
+        public SetBackColor(long millisInFuture, long countDownInterval, View.OnClickListener v) {
+            super(millisInFuture, countDownInterval);
+            onCLick = v;
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            for (int i = 0; i < 4; i++) {
+                if (vars[i].getText() == resultText)
+                    vars[i].setBackground(getDrawable(R.drawable.style_btn_white_green_press));
+                else vars[i].setBackground(getDrawable(R.drawable.style_btn_white_red_press));
+            }
+
+            timerFinish = false;
+        }
+
+        @Override
+        public void onFinish() {
+            for (int i = 0; i < 4; i++) {
+                vars[i].setBackground(getDrawable(R.drawable.btn_stroke_white_press_blue));
+            }
+            var1.setOnClickListener(onCLick);
+            var2.setOnClickListener(onCLick);
+            var3.setOnClickListener(onCLick);
+            var4.setOnClickListener(onCLick);
+            logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            resultText = logCountry.strResult;
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    class RoundTimer extends CountDownTimer {
+        final ProgressBar pb;
+
+
+        /**
+         * @param millisInFuture    The number of millis in the future from the call
+         *                          to {@link #start()} until the countdown is done and {@link #onFinish()}
+         *                          is called.
+         * @param countDownInterval The interval along the way to receive
+         *                          {@link #onTick(long)} callbacks.
+         * @param pb
+         */
+
+        public RoundTimer(long millisInFuture, long countDownInterval, ProgressBar pb, boolean cancelTimer) {
+            super(millisInFuture, countDownInterval);
+            this.pb = pb;
+            if (cancelTimer) cancel();
+        }
+
+        @Override
+        public void onTick(long millisUntilFinished) {
+            timerFinish = false;
+            pb.setProgress((int) millisUntilFinished / progressScale);
+            if (millisUntilFinished < 2000) {
+                pb.setProgressTintList(ColorStateList.valueOf(Color.RED));
+            } else
+                pb.setProgressTintList(ColorStateList.valueOf(Color.GREEN));
+        }
+
+        @Override
+        public void onFinish() {
+
+            count = count - 2;
+            for (int i = 0; i <= 19; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points);
+            }
+            //закрашиваем правильные ответы зеленым
+            for (int i = 0; i < count; i++) {
+                tv = findViewById(progress[i]);
+                tv.setBackgroundResource(R.drawable.style_points_green);
+            }
+            //  logCountry = new LogicCoutry4Lines(quest, var1, var2, var3, var4, countries);
+            //resultText=logCountry.strResult;
+            roundTimer = new RoundTimer(millisInFuture, countDownInterval, pb_timeLeft, timerCancel);
+            roundTimer.start();
+            timerStarted = true;
+        }
+    }
+
+
+    //system btn BACK Start
+    @Override
+    public void onBackPressed() {
+        if (backPressedTime + 2000 > System.currentTimeMillis()) {
+            try {
+                backToast.cancel();
+                Intent intent = new Intent(GeoLvl6.this, GameLevels.class);
+                startActivity(intent);
+                finish();
+            } catch (Exception e) {
+
+            }
+        } else {
+            backToast = Toast.makeText(getBaseContext(), "Нажмите ещё раз, чтобы выйти из уровня", Toast.LENGTH_LONG);
+            backToast.show();
+        }
+        backPressedTime = System.currentTimeMillis();
+    }
+    //system btn BACK End
+
+}
+
+
